//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// This code was generated by XmlSchemaClassGenerator version 2.1.1174.0
namespace Dev4Agriculture.ISO11783.ISOXML.TaskFile
{
    
    
    /// <summary>
    /// <para xml:lang="en">AllocationStamp</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ASP", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("ASP", Namespace="")]
    public partial class ISOAllocationStamp
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOPosition> _position;
        
        /// <summary>
        /// <para xml:lang="en">Position</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PTN")]
        public System.Collections.ObjectModel.Collection<ISOPosition> Position
        {
            get
            {
                return _position;
            }
            private set
            {
                _position = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Position-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOAllocationStamp" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOAllocationStamp" /> class.</para>
        /// </summary>
        public ISOAllocationStamp()
        {
            this._position = new System.Collections.ObjectModel.Collection<ISOPosition>();
        }
        
        /// <summary>
        /// <para xml:lang="en">Start</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A", DataType="dateTime")]
        public System.DateTime Start { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Stop</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("B", DataType="dateTime")]
        public System.DateTime StopValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Stop-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Stop property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool StopValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Stop</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Stop
        {
            get
            {
                if (this.StopValueSpecified)
                {
                    return this.StopValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StopValue = value.GetValueOrDefault();
                this.StopValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Duration</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ulong DurationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Duration-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Duration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DurationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Duration</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> Duration
        {
            get
            {
                if (this.DurationValueSpecified)
                {
                    return this.DurationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DurationValue = value.GetValueOrDefault();
                this.DurationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Type</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public ISOType Type { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">Position</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PTN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PTN", Namespace="")]
    public partial class ISOPosition
    {
        
        /// <summary>
        /// <para xml:lang="en">PositionNorth</para>
        /// <para xml:lang="en">Minimum inclusive value: -90.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 90.0.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-90.0", "90.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public decimal PositionNorth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PositionEast</para>
        /// <para xml:lang="en">Minimum inclusive value: -180.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 180.0.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-180.0", "180.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public decimal PositionEast { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PositionUp</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public long PositionUpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PositionUp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PositionUp property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PositionUpValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PositionUp</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PositionUp
        {
            get
            {
                if (this.PositionUpValueSpecified)
                {
                    return this.PositionUpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PositionUpValue = value.GetValueOrDefault();
                this.PositionUpValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">PositionStatus</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public ISOPositionStatus PositionStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PDOP</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.0", "99.9")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public decimal PDOPValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PDOP-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PDOP property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PDOPValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PDOP</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.9.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> PDOP
        {
            get
            {
                if (this.PDOPValueSpecified)
                {
                    return this.PDOPValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PDOPValue = value.GetValueOrDefault();
                this.PDOPValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">HDOP</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.0", "99.9")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public decimal HDOPValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die HDOP-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the HDOP property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool HDOPValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">HDOP</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 99.9.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> HDOP
        {
            get
            {
                if (this.HDOPValueSpecified)
                {
                    return this.HDOPValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.HDOPValue = value.GetValueOrDefault();
                this.HDOPValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfSatellites</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public byte NumberOfSatellitesValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfSatellites-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfSatellites property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfSatellitesValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfSatellites</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> NumberOfSatellites
        {
            get
            {
                if (this.NumberOfSatellitesValueSpecified)
                {
                    return this.NumberOfSatellitesValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfSatellitesValue = value.GetValueOrDefault();
                this.NumberOfSatellitesValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GpsUtcTime</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public ulong GpsUtcTimeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GpsUtcTime-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GpsUtcTime property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GpsUtcTimeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GpsUtcTime</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> GpsUtcTime
        {
            get
            {
                if (this.GpsUtcTimeValueSpecified)
                {
                    return this.GpsUtcTimeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GpsUtcTimeValue = value.GetValueOrDefault();
                this.GpsUtcTimeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GpsUtcDate</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "0", "65534")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public ushort GpsUtcDateValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GpsUtcDate-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GpsUtcDate property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GpsUtcDateValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GpsUtcDate</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ushort> GpsUtcDate
        {
            get
            {
                if (this.GpsUtcDateValueSpecified)
                {
                    return this.GpsUtcDateValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GpsUtcDateValue = value.GetValueOrDefault();
                this.GpsUtcDateValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOPositionD", Namespace="", AnonymousType=true)]
    public enum ISOPositionStatus
    {
        
        /// <summary>
        /// <para xml:lang="en">no GPS fix</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        noGPSfix,
        
        /// <summary>
        /// <para xml:lang="en">GNSS fix</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        GNSSfix,
        
        /// <summary>
        /// <para xml:lang="en">DGNSS fix</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        DGNSSfix,
        
        /// <summary>
        /// <para xml:lang="en">Precise GNSS</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        PreciseGNSS,
        
        /// <summary>
        /// <para xml:lang="en">RTK fixed integer</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        RTKfixedinteger,
        
        /// <summary>
        /// <para xml:lang="en">RTK float</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        RTKfloat,
        
        /// <summary>
        /// <para xml:lang="en">Est (DR) mode</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Est_DR_mode,
        
        /// <summary>
        /// <para xml:lang="en">Manual input</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Manualinput,
        
        /// <summary>
        /// <para xml:lang="en">Simulate mode</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Simulatemode,
        
        /// <summary>
        /// <para xml:lang="en">Reserved</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Reserved,
        
        /// <summary>
        /// <para xml:lang="en">Reserved</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Reserved1,
        
        /// <summary>
        /// <para xml:lang="en">Reserved</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Reserved2,
        
        /// <summary>
        /// <para xml:lang="en">Reserved</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Reserved3,
        
        /// <summary>
        /// <para xml:lang="en">Reserved</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("13")]
        Reserved4,
        
        /// <summary>
        /// <para xml:lang="en">Error</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("14")]
        Error,
        
        /// <summary>
        /// <para xml:lang="en">PositionStatus value is not available</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("15")]
        PositionStatusvalueisnotavailable,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOAllocationStampD", Namespace="", AnonymousType=true)]
    public enum ISOType
    {
        
        /// <summary>
        /// <para xml:lang="en">Planned</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Planned,
        
        /// <summary>
        /// <para xml:lang="en">Effective (Realized)</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Effective_Realized,
    }
    
    /// <summary>
    /// <para xml:lang="en">BaseStation</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("BSN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("BSN", Namespace="")]
    public partial class ISOBaseStation
    {
        
        /// <summary>
        /// <para xml:lang="en">BaseStationId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (BSN|BSN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(BSN|BSN-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string BaseStationId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">BaseStationDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string BaseStationDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">BaseStationNorth</para>
        /// <para xml:lang="en">Minimum inclusive value: -90.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 90.0.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-90.0", "90.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public decimal BaseStationNorth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">BaseStationEast</para>
        /// <para xml:lang="en">Minimum inclusive value: -180.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 180.0.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-180.0", "180.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public decimal BaseStationEast { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">BaseStationUp</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483647", "2147483647")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public long BaseStationUp { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">CodedComment</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CCT", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CCT", Namespace="")]
    public partial class ISOCodedComment
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOCodedCommentListValue> _codedCommentListValue;
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentListValue</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CCL")]
        public System.Collections.ObjectModel.Collection<ISOCodedCommentListValue> CodedCommentListValue
        {
            get
            {
                return _codedCommentListValue;
            }
            private set
            {
                _codedCommentListValue = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CodedCommentListValue-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CodedCommentListValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodedCommentListValueSpecified
        {
            get
            {
                return (this.CodedCommentListValue.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOCodedComment" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOCodedComment" /> class.</para>
        /// </summary>
        public ISOCodedComment()
        {
            this._codedCommentListValue = new System.Collections.ObjectModel.Collection<ISOCodedCommentListValue>();
        }
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CCT|CCT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CCT|CCT-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string CodedCommentId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string CodedCommentDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentScope</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ISOCodedCommentScope CodedCommentScope { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentGroupIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CCG|CCG-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CCG|CCG-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string CodedCommentGroupIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">CodedCommentListValue</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CCL", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CCL", Namespace="")]
    public partial class ISOCodedCommentListValue
    {
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentListValueId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CCL|CCL-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CCL|CCL-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string CodedCommentListValueId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentListValueDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string CodedCommentListValueDesignator { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOCodedCommentC", Namespace="", AnonymousType=true)]
    public enum ISOCodedCommentScope
    {
        
        /// <summary>
        /// <para xml:lang="en">Point</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Point,
        
        /// <summary>
        /// <para xml:lang="en">Global</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Global,
        
        /// <summary>
        /// <para xml:lang="en">Continuous</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Continuous,
    }
    
    /// <summary>
    /// <para xml:lang="en">CodedCommentGroup</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CCG", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CCG", Namespace="")]
    public partial class ISOCodedCommentGroup
    {
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentGroupId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CCG|CCG-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CCG|CCG-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string CodedCommentGroupId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentGroupDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string CodedCommentGroupDesignator { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">ColourLegend</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CLD", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CLD", Namespace="")]
    public partial class ISOColourLegend
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOColourRange> _colourRange;
        
        /// <summary>
        /// <para xml:lang="en">ColourRange</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CRG")]
        public System.Collections.ObjectModel.Collection<ISOColourRange> ColourRange
        {
            get
            {
                return _colourRange;
            }
            private set
            {
                _colourRange = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ColourRange-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ColourRange collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColourRangeSpecified
        {
            get
            {
                return (this.ColourRange.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOColourLegend" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOColourLegend" /> class.</para>
        /// </summary>
        public ISOColourLegend()
        {
            this._colourRange = new System.Collections.ObjectModel.Collection<ISOColourRange>();
        }
        
        /// <summary>
        /// <para xml:lang="en">ColourLegendId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CLD|CLD-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CLD|CLD-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string ColourLegendId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DefaultColor</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public byte DefaultColorValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DefaultColor-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DefaultColor property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DefaultColorValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DefaultColor</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> DefaultColor
        {
            get
            {
                if (this.DefaultColorValueSpecified)
                {
                    return this.DefaultColorValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DefaultColorValue = value.GetValueOrDefault();
                this.DefaultColorValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">ColourRange</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CRG", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CRG", Namespace="")]
    public partial class ISOColourRange
    {
        
        /// <summary>
        /// <para xml:lang="en">MinimumValue</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483647", "2147483647")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public long MinimumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">MaximumValue</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483647", "2147483647")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public long MaximumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Colour</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public byte Colour { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">CommentAllocation</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CAN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CAN", Namespace="")]
    public partial class ISOCommentAllocation
    {
        
        /// <summary>
        /// <para xml:lang="en">AllocationStamp</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ASP")]
        public ISOAllocationStamp AllocationStamp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CCT|CCT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CCT|CCT-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string CodedCommentIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentListValueIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CCL|CCL-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CCL|CCL-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string CodedCommentListValueIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FreeCommentText</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string FreeCommentText { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">Connection</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CNN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CNN", Namespace="")]
    public partial class ISOConnection
    {
        
        /// <summary>
        /// <para xml:lang="en">DeviceIdRef_0</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DVC|DVC-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DVC|DVC-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string DeviceIdRef_0 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementIdRef_0</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DET|DET-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DET|DET-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string DeviceElementIdRef_0 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceIdRef_1</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DVC|DVC-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DVC|DVC-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string DeviceIdRef_1 { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementIdRef_1</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DET|DET-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DET|DET-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string DeviceElementIdRef_1 { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">ControlAssignment</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CAT", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CAT", Namespace="")]
    public partial class ISOControlAssignment
    {
        
        /// <summary>
        /// <para xml:lang="en">AllocationStamp</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ASP")]
        public ISOAllocationStamp AllocationStamp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">SourceClientNAME</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A", DataType="hexBinary")]
        public byte[] SourceClientNAME { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">UserClientNAME</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B", DataType="hexBinary")]
        public byte[] UserClientNAME { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">SourceDeviceStructureLabel</para>
        /// <para xml:lang="en">Minimum length: 7.</para>
        /// <para xml:lang="en">Maximum length: 39.</para>
        /// <para xml:lang="en">Pattern: ((([0-9]|[a-e]|[A-E])([0-9]|[a-f]|[A-F]))|((F|f)([0-9]|[a-e]|[A-E]))){7}(([0-9]|[a-f]|[A-F])([0-9]|[a-f]|[A-F]))*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(7)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(39)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((([0-9]|[a-e]|[A-E])([0-9]|[a-f]|[A-F]))|((F|f)([0-9]|[a-e]|[A-E]))){7}(([0-9]|[" +
            "a-f]|[A-F])([0-9]|[a-f]|[A-F]))*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C", DataType="hexBinary")]
        public byte[] SourceDeviceStructureLabel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">UserDeviceStructureLabel</para>
        /// <para xml:lang="en">Minimum length: 7.</para>
        /// <para xml:lang="en">Maximum length: 39.</para>
        /// <para xml:lang="en">Pattern: ((([0-9]|[A-E]|[a-e])([0-9]|[A-F]|[a-f]))|((F|f)([0-9]|[A-E]|[a-e]))){7}(([0-9]|[A-F]|[a-f])([0-9]|[A-F]|[a-f]))*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(7)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(39)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((([0-9]|[A-E]|[a-e])([0-9]|[A-F]|[a-f]))|((F|f)([0-9]|[A-E]|[a-e]))){7}(([0-9]|[" +
            "A-F]|[a-f])([0-9]|[A-F]|[a-f]))*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D", DataType="hexBinary")]
        public byte[] UserDeviceStructureLabel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">SourceDeviceElementNumber</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4095.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "0", "4095")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public ushort SourceDeviceElementNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">UserDeviceElementNumber</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4095.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "0", "4095")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public ushort UserDeviceElementNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProcessDataDDI</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("G", DataType="hexBinary")]
        public byte[] ProcessDataDDI { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">CropType</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CTP", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CTP", Namespace="")]
    public partial class ISOCropType
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOCropVariety> _cropVariety;
        
        /// <summary>
        /// <para xml:lang="en">CropVariety</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CVT")]
        public System.Collections.ObjectModel.Collection<ISOCropVariety> CropVariety
        {
            get
            {
                return _cropVariety;
            }
            private set
            {
                _cropVariety = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CropVariety-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CropVariety collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CropVarietySpecified
        {
            get
            {
                return (this.CropVariety.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOCropType" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOCropType" /> class.</para>
        /// </summary>
        public ISOCropType()
        {
            this._cropVariety = new System.Collections.ObjectModel.Collection<ISOCropVariety>();
        }
        
        /// <summary>
        /// <para xml:lang="en">CropTypeId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CTP|CTP-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CTP|CTP-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string CropTypeId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CropTypeDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string CropTypeDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductGroupIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PGP|PGP-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PGP|PGP-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string ProductGroupIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">CropVariety</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CVT", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CVT", Namespace="")]
    public partial class ISOCropVariety
    {
        
        /// <summary>
        /// <para xml:lang="en">CropVarietyId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CVT|CVT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CVT|CVT-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string CropVarietyId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CropVarietyDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string CropVarietyDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PDT|PDT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PDT|PDT-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string ProductIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">CulturalPractice</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CPC", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CPC", Namespace="")]
    public partial class ISOCulturalPractice
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOOperationTechniqueReference> _operationTechniqueReference;
        
        /// <summary>
        /// <para xml:lang="en">OperationTechniqueReference</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("OTR")]
        public System.Collections.ObjectModel.Collection<ISOOperationTechniqueReference> OperationTechniqueReference
        {
            get
            {
                return _operationTechniqueReference;
            }
            private set
            {
                _operationTechniqueReference = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OperationTechniqueReference-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OperationTechniqueReference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationTechniqueReferenceSpecified
        {
            get
            {
                return (this.OperationTechniqueReference.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOCulturalPractice" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOCulturalPractice" /> class.</para>
        /// </summary>
        public ISOCulturalPractice()
        {
            this._operationTechniqueReference = new System.Collections.ObjectModel.Collection<ISOOperationTechniqueReference>();
        }
        
        /// <summary>
        /// <para xml:lang="en">CulturalPracticeId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CPC|CPC-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CPC|CPC-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string CulturalPracticeId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CulturalPracticeDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string CulturalPracticeDesignator { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">OperationTechniqueReference</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OTR", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("OTR", Namespace="")]
    public partial class ISOOperationTechniqueReference
    {
        
        /// <summary>
        /// <para xml:lang="en">OperationTechniqueIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (OTQ|OTQ-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(OTQ|OTQ-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string OperationTechniqueIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">Customer</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("CTR", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("CTR", Namespace="")]
    public partial class ISOCustomer
    {
        
        /// <summary>
        /// <para xml:lang="en">CustomerId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CTR|CTR-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CTR|CTR-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string CustomerId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerLastName</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string CustomerLastName { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerFirstName</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string CustomerFirstName { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerStreet</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string CustomerStreet { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerPOBox</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string CustomerPOBox { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerPostalCode</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public string CustomerPostalCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerCity</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public string CustomerCity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerState</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public string CustomerState { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerCountry</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public string CustomerCountry { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerPhone</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlAttributeAttribute("J")]
        public string CustomerPhone { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerMobile</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlAttributeAttribute("K")]
        public string CustomerMobile { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerFax</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlAttributeAttribute("L")]
        public string CustomerFax { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerEMail</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(64)]
        [System.Xml.Serialization.XmlAttributeAttribute("M")]
        public string CustomerEMail { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">DataLogTrigger</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DLT", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DLT", Namespace="")]
    public partial class ISODataLogTrigger
    {
        
        /// <summary>
        /// <para xml:lang="en">DataLogDDI</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A", DataType="hexBinary")]
        public byte[] DataLogDDI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogMethod</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 31.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "1", "31")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public byte DataLogMethod { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogDistanceInterval</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1000000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "0", "1000000")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public long DataLogDistanceIntervalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogDistanceInterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogDistanceInterval property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogDistanceIntervalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogDistanceInterval</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1000000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> DataLogDistanceInterval
        {
            get
            {
                if (this.DataLogDistanceIntervalValueSpecified)
                {
                    return this.DataLogDistanceIntervalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogDistanceIntervalValue = value.GetValueOrDefault();
                this.DataLogDistanceIntervalValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DataLogTimeInterval</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 60000.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "0", "60000")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public long DataLogTimeIntervalValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogTimeInterval-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogTimeInterval property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogTimeIntervalValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogTimeInterval</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 60000.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> DataLogTimeInterval
        {
            get
            {
                if (this.DataLogTimeIntervalValueSpecified)
                {
                    return this.DataLogTimeIntervalValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogTimeIntervalValue = value.GetValueOrDefault();
                this.DataLogTimeIntervalValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DataLogThresholdMinimum</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483647", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public long DataLogThresholdMinimumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogThresholdMinimum-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogThresholdMinimum property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogThresholdMinimumValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogThresholdMinimum</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> DataLogThresholdMinimum
        {
            get
            {
                if (this.DataLogThresholdMinimumValueSpecified)
                {
                    return this.DataLogThresholdMinimumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogThresholdMinimumValue = value.GetValueOrDefault();
                this.DataLogThresholdMinimumValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DataLogThresholdMaximum</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483647", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public long DataLogThresholdMaximumValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogThresholdMaximum-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogThresholdMaximum property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogThresholdMaximumValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogThresholdMaximum</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> DataLogThresholdMaximum
        {
            get
            {
                if (this.DataLogThresholdMaximumValueSpecified)
                {
                    return this.DataLogThresholdMaximumValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogThresholdMaximumValue = value.GetValueOrDefault();
                this.DataLogThresholdMaximumValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DataLogThresholdChange</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483647", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public long DataLogThresholdChangeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogThresholdChange-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogThresholdChange property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogThresholdChangeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogThresholdChange</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> DataLogThresholdChange
        {
            get
            {
                if (this.DataLogThresholdChangeValueSpecified)
                {
                    return this.DataLogThresholdChangeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogThresholdChangeValue = value.GetValueOrDefault();
                this.DataLogThresholdChangeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DET|DET-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DET|DET-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public string DeviceElementIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ValuePresentationIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (VPN|VPN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(VPN|VPN-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public string ValuePresentationIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGN</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 262143.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "262143")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("J")]
        public ulong DataLogPGNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogPGN-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogPGN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogPGNValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGN</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 262143.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> DataLogPGN
        {
            get
            {
                if (this.DataLogPGNValueSpecified)
                {
                    return this.DataLogPGNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogPGNValue = value.GetValueOrDefault();
                this.DataLogPGNValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGNStartBit</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "63")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("K")]
        public byte DataLogPGNStartBitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogPGNStartBit-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogPGNStartBit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogPGNStartBitValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGNStartBit</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> DataLogPGNStartBit
        {
            get
            {
                if (this.DataLogPGNStartBitValueSpecified)
                {
                    return this.DataLogPGNStartBitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogPGNStartBitValue = value.GetValueOrDefault();
                this.DataLogPGNStartBitValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGNStopBit</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "63")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("L")]
        public byte DataLogPGNStopBitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogPGNStopBit-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogPGNStopBit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogPGNStopBitValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGNStopBit</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> DataLogPGNStopBit
        {
            get
            {
                if (this.DataLogPGNStopBitValueSpecified)
                {
                    return this.DataLogPGNStopBitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogPGNStopBitValue = value.GetValueOrDefault();
                this.DataLogPGNStopBitValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">DataLogValue</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DLV", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DLV", Namespace="")]
    public partial class ISODataLogValue
    {
        
        /// <summary>
        /// <para xml:lang="en">ProcessDataDDI</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A", DataType="hexBinary")]
        public byte[] ProcessDataDDI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProcessDataValue</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public long ProcessDataValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DET|DET-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DET|DET-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string DeviceElementIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGN</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 262143.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "262143")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public ulong DataLogPGNValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogPGN-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogPGN property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogPGNValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGN</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 262143.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> DataLogPGN
        {
            get
            {
                if (this.DataLogPGNValueSpecified)
                {
                    return this.DataLogPGNValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogPGNValue = value.GetValueOrDefault();
                this.DataLogPGNValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGNStartBit</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "63")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public byte DataLogPGNStartBitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogPGNStartBit-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogPGNStartBit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogPGNStartBitValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGNStartBit</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> DataLogPGNStartBit
        {
            get
            {
                if (this.DataLogPGNStartBitValueSpecified)
                {
                    return this.DataLogPGNStartBitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogPGNStartBitValue = value.GetValueOrDefault();
                this.DataLogPGNStartBitValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGNStopBit</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "63")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public byte DataLogPGNStopBitValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogPGNStopBit-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DataLogPGNStopBit property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DataLogPGNStopBitValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DataLogPGNStopBit</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> DataLogPGNStopBit
        {
            get
            {
                if (this.DataLogPGNStopBitValueSpecified)
                {
                    return this.DataLogPGNStopBitValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DataLogPGNStopBitValue = value.GetValueOrDefault();
                this.DataLogPGNStopBitValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">Device</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DVC", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DVC", Namespace="")]
    public partial class ISODevice
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISODeviceElement> _deviceElement;
        
        /// <summary>
        /// <para xml:lang="en">DeviceElement</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DET")]
        public System.Collections.ObjectModel.Collection<ISODeviceElement> DeviceElement
        {
            get
            {
                return _deviceElement;
            }
            private set
            {
                _deviceElement = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceElement-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DeviceElement collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeviceElementSpecified
        {
            get
            {
                return (this.DeviceElement.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISODevice" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISODevice" /> class.</para>
        /// </summary>
        public ISODevice()
        {
            this._deviceElement = new System.Collections.ObjectModel.Collection<ISODeviceElement>();
            this._deviceProperty = new System.Collections.ObjectModel.Collection<ISODeviceProperty>();
            this._deviceProcessData = new System.Collections.ObjectModel.Collection<ISODeviceProcessData>();
            this._deviceValuePresentation = new System.Collections.ObjectModel.Collection<ISODeviceValuePresentation>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISODeviceProperty> _deviceProperty;
        
        /// <summary>
        /// <para xml:lang="en">DeviceProperty</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DPT")]
        public System.Collections.ObjectModel.Collection<ISODeviceProperty> DeviceProperty
        {
            get
            {
                return _deviceProperty;
            }
            private set
            {
                _deviceProperty = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceProperty-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DeviceProperty collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DevicePropertySpecified
        {
            get
            {
                return (this.DeviceProperty.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISODeviceProcessData> _deviceProcessData;
        
        /// <summary>
        /// <para xml:lang="en">DeviceProcessData</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DPD")]
        public System.Collections.ObjectModel.Collection<ISODeviceProcessData> DeviceProcessData
        {
            get
            {
                return _deviceProcessData;
            }
            private set
            {
                _deviceProcessData = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceProcessData-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DeviceProcessData collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeviceProcessDataSpecified
        {
            get
            {
                return (this.DeviceProcessData.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISODeviceValuePresentation> _deviceValuePresentation;
        
        /// <summary>
        /// <para xml:lang="en">DeviceValuePresentation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DVP")]
        public System.Collections.ObjectModel.Collection<ISODeviceValuePresentation> DeviceValuePresentation
        {
            get
            {
                return _deviceValuePresentation;
            }
            private set
            {
                _deviceValuePresentation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceValuePresentation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DeviceValuePresentation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeviceValuePresentationSpecified
        {
            get
            {
                return (this.DeviceValuePresentation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DeviceId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DVC|DVC-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DVC|DVC-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string DeviceId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string DeviceDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceSoftwareVersion</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string DeviceSoftwareVersion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ClientNAME</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D", DataType="hexBinary")]
        public byte[] ClientNAME { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceSerialNumber</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string DeviceSerialNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceStructureLabel</para>
        /// <para xml:lang="en">Minimum length: 7.</para>
        /// <para xml:lang="en">Maximum length: 39.</para>
        /// <para xml:lang="en">Pattern: ((([0-9]|[a-e]|[A-E])([0-9]|[a-f]|[A-F]))|((F|f)([0-9]|[a-e]|[A-E]))){7}(([0-9]|[a-f]|[A-F])([0-9]|[a-f]|[A-F]))*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(7)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(39)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("((([0-9]|[a-e]|[A-E])([0-9]|[a-f]|[A-F]))|((F|f)([0-9]|[a-e]|[A-E]))){7}(([0-9]|[" +
            "a-f]|[A-F])([0-9]|[a-f]|[A-F]))*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("F", DataType="hexBinary")]
        public byte[] DeviceStructureLabel { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceLocalizationLabel</para>
        /// <para xml:lang="en">Minimum length: 7.</para>
        /// <para xml:lang="en">Maximum length: 7.</para>
        /// <para xml:lang="en">Pattern: (F|f){2}((([0-9]|[A-E]|[a-e])([0-9]|[A-F]|[a-f]))|((F|f)([0-9]|[A-E]|[a-e])))*.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(7)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(7)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(F|f){2}((([0-9]|[A-E]|[a-e])([0-9]|[A-F]|[a-f]))|((F|f)([0-9]|[A-E]|[a-e])))*")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("G", DataType="hexBinary")]
        public byte[] DeviceLocalizationLabel { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">DeviceElement</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DET", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DET", Namespace="")]
    public partial class ISODeviceElement
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISODeviceObjectReference> _deviceObjectReference;
        
        /// <summary>
        /// <para xml:lang="en">DeviceObjectReference</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DOR")]
        public System.Collections.ObjectModel.Collection<ISODeviceObjectReference> DeviceObjectReference
        {
            get
            {
                return _deviceObjectReference;
            }
            private set
            {
                _deviceObjectReference = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceObjectReference-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DeviceObjectReference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeviceObjectReferenceSpecified
        {
            get
            {
                return (this.DeviceObjectReference.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISODeviceElement" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISODeviceElement" /> class.</para>
        /// </summary>
        public ISODeviceElement()
        {
            this._deviceObjectReference = new System.Collections.ObjectModel.Collection<ISODeviceObjectReference>();
        }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DET|DET-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DET|DET-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string DeviceElementId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1", "65534")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public ushort DeviceElementObjectId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementType</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ISODeviceElementType DeviceElementType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string DeviceElementDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementNumber</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4095.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "0", "4095")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public ushort DeviceElementNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ParentObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "0", "65534")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public ushort ParentObjectId { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">DeviceObjectReference</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DOR", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DOR", Namespace="")]
    public partial class ISODeviceObjectReference
    {
        
        /// <summary>
        /// <para xml:lang="en">DeviceObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1", "65534")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public ushort DeviceObjectId { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISODeviceElementC", Namespace="", AnonymousType=true)]
    public enum ISODeviceElementType
    {
        
        /// <summary>
        /// <para xml:lang="en">device</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        device,
        
        /// <summary>
        /// <para xml:lang="en">function</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        function,
        
        /// <summary>
        /// <para xml:lang="en">bin</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        bin,
        
        /// <summary>
        /// <para xml:lang="en">section</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        section,
        
        /// <summary>
        /// <para xml:lang="en">unit</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        unit,
        
        /// <summary>
        /// <para xml:lang="en">connector</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        connector,
        
        /// <summary>
        /// <para xml:lang="en">navigation</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        navigation,
    }
    
    /// <summary>
    /// <para xml:lang="en">DeviceProperty</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DPT", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DPT", Namespace="")]
    public partial class ISODeviceProperty
    {
        
        /// <summary>
        /// <para xml:lang="en">DevicePropertyObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1", "65534")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public ushort DevicePropertyObjectId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DevicePropertyDDI</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B", DataType="hexBinary")]
        public byte[] DevicePropertyDDI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DevicePropertyValue</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public long DevicePropertyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DevicePropertyDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string DevicePropertyDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceValuePresentationObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1", "65534")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public ushort DeviceValuePresentationObjectIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceValuePresentationObjectId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeviceValuePresentationObjectId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DeviceValuePresentationObjectIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceValuePresentationObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ushort> DeviceValuePresentationObjectId
        {
            get
            {
                if (this.DeviceValuePresentationObjectIdValueSpecified)
                {
                    return this.DeviceValuePresentationObjectIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeviceValuePresentationObjectIdValue = value.GetValueOrDefault();
                this.DeviceValuePresentationObjectIdValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">DeviceProcessData</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DPD", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DPD", Namespace="")]
    public partial class ISODeviceProcessData
    {
        
        /// <summary>
        /// <para xml:lang="en">DeviceProcessDataObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1", "65534")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public ushort DeviceProcessDataObjectId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceProcessDataDDI</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B", DataType="hexBinary")]
        public byte[] DeviceProcessDataDDI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceProcessDataProperty</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 7.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "7")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public byte DeviceProcessDataProperty { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceProcessDataTriggerMethods</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 31.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "31")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public byte DeviceProcessDataTriggerMethods { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceProcessDataDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string DeviceProcessDataDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceValuePresentationObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1", "65534")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public ushort DeviceValuePresentationObjectIdValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceValuePresentationObjectId-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DeviceValuePresentationObjectId property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DeviceValuePresentationObjectIdValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceValuePresentationObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ushort> DeviceValuePresentationObjectId
        {
            get
            {
                if (this.DeviceValuePresentationObjectIdValueSpecified)
                {
                    return this.DeviceValuePresentationObjectIdValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DeviceValuePresentationObjectIdValue = value.GetValueOrDefault();
                this.DeviceValuePresentationObjectIdValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">DeviceValuePresentation</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DVP", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DVP", Namespace="")]
    public partial class ISODeviceValuePresentation
    {
        
        /// <summary>
        /// <para xml:lang="en">DeviceValuePresentationObjectId</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65534.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ushort), "1", "65534")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public ushort DeviceValuePresentationObjectId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Offset</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public long Offset { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Scale</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.000000001.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100000000.0.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.000000001", "100000000.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public decimal Scale { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfDecimals</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 7.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "7")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public byte NumberOfDecimals { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">UnitDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string UnitDesignator { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">DeviceAllocation</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("DAN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("DAN", Namespace="")]
    public partial class ISODeviceAllocation
    {
        
        /// <summary>
        /// <para xml:lang="en">AllocationStamp</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ASP")]
        public ISOAllocationStamp AllocationStamp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ClientNAMEValue</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A", DataType="hexBinary")]
        public byte[] ClientNAMEValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ClientNAMEMask</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.Xml.Serialization.XmlAttributeAttribute("B", DataType="hexBinary")]
        public byte[] ClientNAMEMask { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DVC|DVC-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DVC|DVC-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string DeviceIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">Farm</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("FRM", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("FRM", Namespace="")]
    public partial class ISOFarm
    {
        
        /// <summary>
        /// <para xml:lang="en">FarmId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (FRM|FRM-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(FRM|FRM-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string FarmId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FarmDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string FarmDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FarmStreet</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string FarmStreet { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FarmPOBox</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string FarmPOBox { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FarmPostalCode</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string FarmPostalCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FarmCity</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public string FarmCity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FarmState</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public string FarmState { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FarmCountry</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public string FarmCountry { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CTR|CTR-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CTR|CTR-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public string CustomerIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">Grid</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GRD", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("GRD", Namespace="")]
    public partial class ISOGrid
    {
        
        /// <summary>
        /// <para xml:lang="en">GridMinimumNorthPosition</para>
        /// <para xml:lang="en">Minimum inclusive value: -90.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 90.0.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-90.0", "90.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public decimal GridMinimumNorthPosition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GridMinimumEastPosition</para>
        /// <para xml:lang="en">Minimum inclusive value: -180.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 180.0.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-180.0", "180.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public decimal GridMinimumEastPosition { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GridCellNorthSize</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1.0.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(double), "0.0", "1.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public double GridCellNorthSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GridCellEastSize</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 1.0.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(double), "0.0", "1.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public double GridCellEastSize { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GridMaximumColumn</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967295.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967295")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public ulong GridMaximumColumn { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GridMaximumRow</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967295.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967295")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public ulong GridMaximumRow { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Filename</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// <para xml:lang="en">Pattern: GRD[0-9][0-9][0-9][0-9][0-9].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("GRD[0-9][0-9][0-9][0-9][0-9]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public string Filename { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Filelength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public ulong FilelengthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filelength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Filelength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FilelengthValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Filelength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> Filelength
        {
            get
            {
                if (this.FilelengthValueSpecified)
                {
                    return this.FilelengthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FilelengthValue = value.GetValueOrDefault();
                this.FilelengthValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GridType</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public ISOGridType GridType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">TreatmentZoneCode</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("J")]
        public byte TreatmentZoneCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TreatmentZoneCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TreatmentZoneCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TreatmentZoneCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">TreatmentZoneCode</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> TreatmentZoneCode
        {
            get
            {
                if (this.TreatmentZoneCodeValueSpecified)
                {
                    return this.TreatmentZoneCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TreatmentZoneCodeValue = value.GetValueOrDefault();
                this.TreatmentZoneCodeValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOGridI", Namespace="", AnonymousType=true)]
    public enum ISOGridType
    {
        
        /// <summary>
        /// <para xml:lang="en">grid type 1</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        gridtype1,
        
        /// <summary>
        /// <para xml:lang="en">grid type 2</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        gridtype2,
    }
    
    /// <summary>
    /// <para xml:lang="en">GuidanceAllocation</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GAN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("GAN", Namespace="")]
    public partial class ISOGuidanceAllocation
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOAllocationStamp> _allocationStamp;
        
        /// <summary>
        /// <para xml:lang="en">AllocationStamp</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ASP")]
        public System.Collections.ObjectModel.Collection<ISOAllocationStamp> AllocationStamp
        {
            get
            {
                return _allocationStamp;
            }
            private set
            {
                _allocationStamp = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AllocationStamp-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the AllocationStamp collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AllocationStampSpecified
        {
            get
            {
                return (this.AllocationStamp.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOGuidanceAllocation" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOGuidanceAllocation" /> class.</para>
        /// </summary>
        public ISOGuidanceAllocation()
        {
            this._allocationStamp = new System.Collections.ObjectModel.Collection<ISOAllocationStamp>();
            this._guidanceShift = new System.Collections.ObjectModel.Collection<ISOGuidanceShift>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOGuidanceShift> _guidanceShift;
        
        /// <summary>
        /// <para xml:lang="en">GuidanceShift</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("GST")]
        public System.Collections.ObjectModel.Collection<ISOGuidanceShift> GuidanceShift
        {
            get
            {
                return _guidanceShift;
            }
            private set
            {
                _guidanceShift = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidanceShift-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the GuidanceShift collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuidanceShiftSpecified
        {
            get
            {
                return (this.GuidanceShift.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidanceGroupIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (GGP|GGP-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(GGP|GGP-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string GuidanceGroupIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">GuidanceShift</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GST", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("GST", Namespace="")]
    public partial class ISOGuidanceShift
    {
        
        /// <summary>
        /// <para xml:lang="en">AllocationStamp</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ASP")]
        public ISOAllocationStamp AllocationStamp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidanceGroupIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (GGP|GGP-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(GGP|GGP-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string GuidanceGroupIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (GPN|GPN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(GPN|GPN-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string GuidancePatternIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidanceEastShift</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public long GuidanceEastShiftValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidanceEastShift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidanceEastShift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidanceEastShiftValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidanceEastShift</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> GuidanceEastShift
        {
            get
            {
                if (this.GuidanceEastShiftValueSpecified)
                {
                    return this.GuidanceEastShiftValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidanceEastShiftValue = value.GetValueOrDefault();
                this.GuidanceEastShiftValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidanceNorthShift</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public long GuidanceNorthShiftValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidanceNorthShift-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidanceNorthShift property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidanceNorthShiftValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidanceNorthShift</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> GuidanceNorthShift
        {
            get
            {
                if (this.GuidanceNorthShiftValueSpecified)
                {
                    return this.GuidanceNorthShiftValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidanceNorthShiftValue = value.GetValueOrDefault();
                this.GuidanceNorthShiftValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">PropagationOffset</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public long PropagationOffsetValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PropagationOffset-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PropagationOffset property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PropagationOffsetValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PropagationOffset</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PropagationOffset
        {
            get
            {
                if (this.PropagationOffsetValueSpecified)
                {
                    return this.PropagationOffsetValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PropagationOffsetValue = value.GetValueOrDefault();
                this.PropagationOffsetValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">GuidanceGroup</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GGP", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("GGP", Namespace="")]
    public partial class ISOGuidanceGroup
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOGuidancePattern> _guidancePattern;
        
        /// <summary>
        /// <para xml:lang="en">GuidancePattern</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("GPN")]
        public System.Collections.ObjectModel.Collection<ISOGuidancePattern> GuidancePattern
        {
            get
            {
                return _guidancePattern;
            }
            private set
            {
                _guidancePattern = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidancePattern-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the GuidancePattern collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuidancePatternSpecified
        {
            get
            {
                return (this.GuidancePattern.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOGuidanceGroup" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOGuidanceGroup" /> class.</para>
        /// </summary>
        public ISOGuidanceGroup()
        {
            this._guidancePattern = new System.Collections.ObjectModel.Collection<ISOGuidancePattern>();
            this._boundaryPolygon = new System.Collections.ObjectModel.Collection<ISOPolygon>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOPolygon> _boundaryPolygon;
        
        /// <summary>
        /// <para xml:lang="en">BoundaryPolygon</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PLN")]
        public System.Collections.ObjectModel.Collection<ISOPolygon> BoundaryPolygon
        {
            get
            {
                return _boundaryPolygon;
            }
            private set
            {
                _boundaryPolygon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BoundaryPolygon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the BoundaryPolygon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoundaryPolygonSpecified
        {
            get
            {
                return (this.BoundaryPolygon.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidanceGroupId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (GGP|GGP-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(GGP|GGP-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string GuidanceGroupId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidanceGroupDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string GuidanceGroupDesignator { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">GuidancePattern</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("GPN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("GPN", Namespace="")]
    public partial class ISOGuidancePattern
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOLineString> _lineString;
        
        /// <summary>
        /// <para xml:lang="en">LineString</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("LSG")]
        public System.Collections.ObjectModel.Collection<ISOLineString> LineString
        {
            get
            {
                return _lineString;
            }
            private set
            {
                _lineString = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LineString-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LineString collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LineStringSpecified
        {
            get
            {
                return (this.LineString.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOGuidancePattern" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOGuidancePattern" /> class.</para>
        /// </summary>
        public ISOGuidancePattern()
        {
            this._lineString = new System.Collections.ObjectModel.Collection<ISOLineString>();
            this._boundaryPolygon = new System.Collections.ObjectModel.Collection<ISOPolygon>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOPolygon> _boundaryPolygon;
        
        /// <summary>
        /// <para xml:lang="en">BoundaryPolygon</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PLN")]
        public System.Collections.ObjectModel.Collection<ISOPolygon> BoundaryPolygon
        {
            get
            {
                return _boundaryPolygon;
            }
            private set
            {
                _boundaryPolygon = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BoundaryPolygon-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the BoundaryPolygon collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BoundaryPolygonSpecified
        {
            get
            {
                return (this.BoundaryPolygon.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (GPN|GPN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(GPN|GPN-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string GuidancePatternId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string GuidancePatternDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternType</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ISOGuidancePatternType GuidancePatternType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternOptions</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public ISOGuidancePatternOptions GuidancePatternOptionsValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidancePatternOptions-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidancePatternOptions property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidancePatternOptionsValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternOptions</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ISOGuidancePatternOptions> GuidancePatternOptions
        {
            get
            {
                if (this.GuidancePatternOptionsValueSpecified)
                {
                    return this.GuidancePatternOptionsValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidancePatternOptionsValue = value.GetValueOrDefault();
                this.GuidancePatternOptionsValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternPropagationDirection</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public ISOGuidancePatternPropagationDirection GuidancePatternPropagationDirectionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidancePatternPropagationDirection-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidancePatternPropagationDirection property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidancePatternPropagationDirectionValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternPropagationDirection</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ISOGuidancePatternPropagationDirection> GuidancePatternPropagationDirection
        {
            get
            {
                if (this.GuidancePatternPropagationDirectionValueSpecified)
                {
                    return this.GuidancePatternPropagationDirectionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidancePatternPropagationDirectionValue = value.GetValueOrDefault();
                this.GuidancePatternPropagationDirectionValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternExtension</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public ISOGuidancePatternExtension GuidancePatternExtensionValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidancePatternExtension-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidancePatternExtension property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidancePatternExtensionValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternExtension</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ISOGuidancePatternExtension> GuidancePatternExtension
        {
            get
            {
                if (this.GuidancePatternExtensionValueSpecified)
                {
                    return this.GuidancePatternExtensionValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidancePatternExtensionValue = value.GetValueOrDefault();
                this.GuidancePatternExtensionValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternHeading</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 360.0.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.0", "360.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public decimal GuidancePatternHeadingValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidancePatternHeading-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidancePatternHeading property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidancePatternHeadingValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternHeading</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 360.0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> GuidancePatternHeading
        {
            get
            {
                if (this.GuidancePatternHeadingValueSpecified)
                {
                    return this.GuidancePatternHeadingValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidancePatternHeadingValue = value.GetValueOrDefault();
                this.GuidancePatternHeadingValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternRadius</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public ulong GuidancePatternRadiusValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidancePatternRadius-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidancePatternRadius property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidancePatternRadiusValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternRadius</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> GuidancePatternRadius
        {
            get
            {
                if (this.GuidancePatternRadiusValueSpecified)
                {
                    return this.GuidancePatternRadiusValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidancePatternRadiusValue = value.GetValueOrDefault();
                this.GuidancePatternRadiusValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternGNSSMethod</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public ISOGuidancePatternGNSSMethod GuidancePatternGNSSMethodValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidancePatternGNSSMethod-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidancePatternGNSSMethod property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidancePatternGNSSMethodValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternGNSSMethod</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ISOGuidancePatternGNSSMethod> GuidancePatternGNSSMethod
        {
            get
            {
                if (this.GuidancePatternGNSSMethodValueSpecified)
                {
                    return this.GuidancePatternGNSSMethodValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidancePatternGNSSMethodValue = value.GetValueOrDefault();
                this.GuidancePatternGNSSMethodValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternHorizontalAccuracy</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65.0.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.0", "65.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("J")]
        public decimal GuidancePatternHorizontalAccuracyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidancePatternHorizontalAccuracy-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidancePatternHorizontalAccuracy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidancePatternHorizontalAccuracyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternHorizontalAccuracy</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65.0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> GuidancePatternHorizontalAccuracy
        {
            get
            {
                if (this.GuidancePatternHorizontalAccuracyValueSpecified)
                {
                    return this.GuidancePatternHorizontalAccuracyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidancePatternHorizontalAccuracyValue = value.GetValueOrDefault();
                this.GuidancePatternHorizontalAccuracyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternVerticalAccuracy</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65.0.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.0", "65.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("K")]
        public decimal GuidancePatternVerticalAccuracyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidancePatternVerticalAccuracy-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the GuidancePatternVerticalAccuracy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool GuidancePatternVerticalAccuracyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">GuidancePatternVerticalAccuracy</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65.0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> GuidancePatternVerticalAccuracy
        {
            get
            {
                if (this.GuidancePatternVerticalAccuracyValueSpecified)
                {
                    return this.GuidancePatternVerticalAccuracyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.GuidancePatternVerticalAccuracyValue = value.GetValueOrDefault();
                this.GuidancePatternVerticalAccuracyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">BaseStationIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (BSN|BSN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(BSN|BSN-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("L")]
        public string BaseStationIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">OriginalSRID</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("M")]
        public string OriginalSRID { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfSwathsLeft</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("N")]
        public ulong NumberOfSwathsLeftValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfSwathsLeft-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfSwathsLeft property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfSwathsLeftValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfSwathsLeft</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> NumberOfSwathsLeft
        {
            get
            {
                if (this.NumberOfSwathsLeftValueSpecified)
                {
                    return this.NumberOfSwathsLeftValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfSwathsLeftValue = value.GetValueOrDefault();
                this.NumberOfSwathsLeftValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfSwathsRight</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("O")]
        public ulong NumberOfSwathsRightValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die NumberOfSwathsRight-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the NumberOfSwathsRight property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool NumberOfSwathsRightValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfSwathsRight</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> NumberOfSwathsRight
        {
            get
            {
                if (this.NumberOfSwathsRightValueSpecified)
                {
                    return this.NumberOfSwathsRightValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.NumberOfSwathsRightValue = value.GetValueOrDefault();
                this.NumberOfSwathsRightValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">LineString</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("LSG", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("LSG", Namespace="")]
    public partial class ISOLineString
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOPoint> _point;
        
        /// <summary>
        /// <para xml:lang="en">Point</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PNT")]
        public System.Collections.ObjectModel.Collection<ISOPoint> Point
        {
            get
            {
                return _point;
            }
            private set
            {
                _point = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Point-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Point collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PointSpecified
        {
            get
            {
                return (this.Point.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOLineString" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOLineString" /> class.</para>
        /// </summary>
        public ISOLineString()
        {
            this._point = new System.Collections.ObjectModel.Collection<ISOPoint>();
        }
        
        /// <summary>
        /// <para xml:lang="en">LineStringType</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public ISOLineStringType LineStringType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">LineStringDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string LineStringDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">LineStringWidth</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ulong LineStringWidthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LineStringWidth-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LineStringWidth property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LineStringWidthValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">LineStringWidth</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> LineStringWidth
        {
            get
            {
                if (this.LineStringWidthValueSpecified)
                {
                    return this.LineStringWidthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LineStringWidthValue = value.GetValueOrDefault();
                this.LineStringWidthValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">LineStringLength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public ulong LineStringLengthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LineStringLength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LineStringLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LineStringLengthValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">LineStringLength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> LineStringLength
        {
            get
            {
                if (this.LineStringLengthValueSpecified)
                {
                    return this.LineStringLengthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LineStringLengthValue = value.GetValueOrDefault();
                this.LineStringLengthValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">LineStringColour</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public byte LineStringColourValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LineStringColour-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the LineStringColour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool LineStringColourValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">LineStringColour</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> LineStringColour
        {
            get
            {
                if (this.LineStringColourValueSpecified)
                {
                    return this.LineStringColourValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.LineStringColourValue = value.GetValueOrDefault();
                this.LineStringColourValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">LineStringId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (LSG|LSG-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(LSG|LSG-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public string LineStringId { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">Point</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PNT", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PNT", Namespace="")]
    public partial class ISOPoint
    {
        
        /// <summary>
        /// <para xml:lang="en">PointType</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public ISOPointType PointType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PointDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string PointDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PointNorth</para>
        /// <para xml:lang="en">Minimum inclusive value: -90.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 90.0.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-90.0", "90.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public decimal PointNorth { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PointEast</para>
        /// <para xml:lang="en">Minimum inclusive value: -180.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 180.0.</para>
        /// <para xml:lang="en">Total number of digits in fraction: 9.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "-180.0", "180.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public decimal PointEast { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PointUp</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483647", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public long PointUpValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PointUp-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PointUp property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PointUpValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PointUp</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483647.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> PointUp
        {
            get
            {
                if (this.PointUpValueSpecified)
                {
                    return this.PointUpValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PointUpValue = value.GetValueOrDefault();
                this.PointUpValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">PointColour</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public byte PointColourValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PointColour-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PointColour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PointColourValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PointColour</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> PointColour
        {
            get
            {
                if (this.PointColourValueSpecified)
                {
                    return this.PointColourValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PointColourValue = value.GetValueOrDefault();
                this.PointColourValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">PointId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PNT|PNT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PNT|PNT-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public string PointId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PointHorizontalAccuracy</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65.0.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.0", "65.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public decimal PointHorizontalAccuracyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PointHorizontalAccuracy-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PointHorizontalAccuracy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PointHorizontalAccuracyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PointHorizontalAccuracy</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65.0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> PointHorizontalAccuracy
        {
            get
            {
                if (this.PointHorizontalAccuracyValueSpecified)
                {
                    return this.PointHorizontalAccuracyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PointHorizontalAccuracyValue = value.GetValueOrDefault();
                this.PointHorizontalAccuracyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">PointVerticalAccuracy</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65.0.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.0", "65.0")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public decimal PointVerticalAccuracyValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PointVerticalAccuracy-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PointVerticalAccuracy property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PointVerticalAccuracyValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PointVerticalAccuracy</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 65.0.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<decimal> PointVerticalAccuracy
        {
            get
            {
                if (this.PointVerticalAccuracyValueSpecified)
                {
                    return this.PointVerticalAccuracyValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PointVerticalAccuracyValue = value.GetValueOrDefault();
                this.PointVerticalAccuracyValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Filename</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// <para xml:lang="en">Pattern: PNT([0-9]){5}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("PNT([0-9]){5}")]
        [System.Xml.Serialization.XmlAttributeAttribute("J")]
        public string Filename { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Filelength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("K")]
        public ulong FilelengthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filelength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Filelength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FilelengthValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Filelength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> Filelength
        {
            get
            {
                if (this.FilelengthValueSpecified)
                {
                    return this.FilelengthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FilelengthValue = value.GetValueOrDefault();
                this.FilelengthValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOPointA", Namespace="", AnonymousType=true)]
    public enum ISOPointType
    {
        
        /// <summary>
        /// <para xml:lang="en">Flag</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Flag,
        
        /// <summary>
        /// <para xml:lang="en">other</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        other,
        
        /// <summary>
        /// <para xml:lang="en">Field Access</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        FieldAccess,
        
        /// <summary>
        /// <para xml:lang="en">Storage</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Storage,
        
        /// <summary>
        /// <para xml:lang="en">Obstacle</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Obstacle,
        
        /// <summary>
        /// <para xml:lang="en">Guidance Reference A</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        GuidanceReferenceA,
        
        /// <summary>
        /// <para xml:lang="en">Guidance Reference B</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        GuidanceReferenceB,
        
        /// <summary>
        /// <para xml:lang="en">Guidance Reference Center</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        GuidanceReferenceCenter,
        
        /// <summary>
        /// <para xml:lang="en">Guidance Point</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        GuidancePoint,
        
        /// <summary>
        /// <para xml:lang="en">Partfield Reference Point</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        PartfieldReferencePoint,
        
        /// <summary>
        /// <para xml:lang="en">Homebase</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        Homebase,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOLineStringA", Namespace="", AnonymousType=true)]
    public enum ISOLineStringType
    {
        
        /// <summary>
        /// <para xml:lang="en">PolygonExterior</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        PolygonExterior,
        
        /// <summary>
        /// <para xml:lang="en">PolygonInterior</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        PolygonInterior,
        
        /// <summary>
        /// <para xml:lang="en">TramLine</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        TramLine,
        
        /// <summary>
        /// <para xml:lang="en">SamplingRoute</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        SamplingRoute,
        
        /// <summary>
        /// <para xml:lang="en">GuidancePattern</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        GuidancePattern,
        
        /// <summary>
        /// <para xml:lang="en">Drainage</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Drainage,
        
        /// <summary>
        /// <para xml:lang="en">Fence</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Fence,
        
        /// <summary>
        /// <para xml:lang="en">Flag</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Flag,
        
        /// <summary>
        /// <para xml:lang="en">Obstacle</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Obstacle,
    }
    
    /// <summary>
    /// <para xml:lang="en">Polygon</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PLN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PLN", Namespace="")]
    public partial class ISOPolygon
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOLineString> _lineString;
        
        /// <summary>
        /// <para xml:lang="en">LineString</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("LSG")]
        public System.Collections.ObjectModel.Collection<ISOLineString> LineString
        {
            get
            {
                return _lineString;
            }
            private set
            {
                _lineString = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LineString-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LineString collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LineStringSpecified
        {
            get
            {
                return (this.LineString.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOPolygon" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOPolygon" /> class.</para>
        /// </summary>
        public ISOPolygon()
        {
            this._lineString = new System.Collections.ObjectModel.Collection<ISOLineString>();
        }
        
        /// <summary>
        /// <para xml:lang="en">PolygonType</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public ISOPolygonType PolygonType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PolygonDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string PolygonDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PolygonArea</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ulong PolygonAreaValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PolygonArea-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PolygonArea property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PolygonAreaValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PolygonArea</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> PolygonArea
        {
            get
            {
                if (this.PolygonAreaValueSpecified)
                {
                    return this.PolygonAreaValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PolygonAreaValue = value.GetValueOrDefault();
                this.PolygonAreaValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">PolygonColour</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public byte PolygonColourValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PolygonColour-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PolygonColour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PolygonColourValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PolygonColour</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> PolygonColour
        {
            get
            {
                if (this.PolygonColourValueSpecified)
                {
                    return this.PolygonColourValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PolygonColourValue = value.GetValueOrDefault();
                this.PolygonColourValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">PolygonId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PLN|PLN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PLN|PLN-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string PolygonId { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOPolygonA", Namespace="", AnonymousType=true)]
    public enum ISOPolygonType
    {
        
        /// <summary>
        /// <para xml:lang="en">Partfield Boundary</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        PartfieldBoundary,
        
        /// <summary>
        /// <para xml:lang="en">TreatmentZone</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        TreatmentZone,
        
        /// <summary>
        /// <para xml:lang="en">WaterSurface</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        WaterSurface,
        
        /// <summary>
        /// <para xml:lang="en">Building</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Building,
        
        /// <summary>
        /// <para xml:lang="en">Road</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Road,
        
        /// <summary>
        /// <para xml:lang="en">Obstacle</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Obstacle,
        
        /// <summary>
        /// <para xml:lang="en">Flag</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Flag,
        
        /// <summary>
        /// <para xml:lang="en">Other</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Other,
        
        /// <summary>
        /// <para xml:lang="en">Mainfield</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("9")]
        Mainfield,
        
        /// <summary>
        /// <para xml:lang="en">Headland</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("10")]
        Headland,
        
        /// <summary>
        /// <para xml:lang="en">BufferZone</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("11")]
        BufferZone,
        
        /// <summary>
        /// <para xml:lang="en">Windbreak</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("12")]
        Windbreak,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOGuidancePatternC", Namespace="", AnonymousType=true)]
    public enum ISOGuidancePatternType
    {
        
        /// <summary>
        /// <para xml:lang="en">AB</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        AB,
        
        /// <summary>
        /// <para xml:lang="en">A+</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        APlus,
        
        /// <summary>
        /// <para xml:lang="en">Curve</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Curve,
        
        /// <summary>
        /// <para xml:lang="en">Pivot</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Pivot,
        
        /// <summary>
        /// <para xml:lang="en">Spiral</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Spiral,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOGuidancePatternD", Namespace="", AnonymousType=true)]
    public enum ISOGuidancePatternOptions
    {
        
        /// <summary>
        /// <para xml:lang="en">Clockwise - for pivot</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Clockwise_forpivot,
        
        /// <summary>
        /// <para xml:lang="en">Counter-clockwise - for pivot</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Counter_clockwise_forpivot,
        
        /// <summary>
        /// <para xml:lang="en">Full Circle - for pivot</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        FullCircle_forpivot,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOGuidancePatternE", Namespace="", AnonymousType=true)]
    public enum ISOGuidancePatternPropagationDirection
    {
        
        /// <summary>
        /// <para xml:lang="en">Both directions</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Bothdirections,
        
        /// <summary>
        /// <para xml:lang="en">Left direction only</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Leftdirectiononly,
        
        /// <summary>
        /// <para xml:lang="en">Right direction only</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Rightdirectiononly,
        
        /// <summary>
        /// <para xml:lang="en">No propagation</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Nopropagation,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOGuidancePatternF", Namespace="", AnonymousType=true)]
    public enum ISOGuidancePatternExtension
    {
        
        /// <summary>
        /// <para xml:lang="en">From both first and last point</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Frombothfirstandlastpoint,
        
        /// <summary>
        /// <para xml:lang="en">From first point (A) only</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Fromfirstpoint_A_only,
        
        /// <summary>
        /// <para xml:lang="en">From last point (B) only</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Fromlastpoint_B_only,
        
        /// <summary>
        /// <para xml:lang="en">No extensions</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Noextensions,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOGuidancePatternI", Namespace="", AnonymousType=true)]
    public enum ISOGuidancePatternGNSSMethod
    {
        
        /// <summary>
        /// <para xml:lang="en">no GPS fix</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        noGPSfix,
        
        /// <summary>
        /// <para xml:lang="en">GNSS fix</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        GNSSfix,
        
        /// <summary>
        /// <para xml:lang="en">DGNSS fix</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        DGNSSfix,
        
        /// <summary>
        /// <para xml:lang="en">Precise GNSS</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        PreciseGNSS,
        
        /// <summary>
        /// <para xml:lang="en">RTK fixed integer</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        RTKfixedinteger,
        
        /// <summary>
        /// <para xml:lang="en">RTK float</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        RTKfloat,
        
        /// <summary>
        /// <para xml:lang="en">Est (DR) mode</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Est_DR_mode,
        
        /// <summary>
        /// <para xml:lang="en">Manual input</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Manualinput,
        
        /// <summary>
        /// <para xml:lang="en">Simulate mode</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        Simulatemode,
        
        /// <summary>
        /// <para xml:lang="en">Desktop generated data</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("16")]
        Desktopgenerateddata,
        
        /// <summary>
        /// <para xml:lang="en">Other</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("17")]
        Other,
    }
    
    /// <summary>
    /// <para xml:lang="en">OperationTechnique</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OTQ", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("OTQ", Namespace="")]
    public partial class ISOOperationTechnique
    {
        
        /// <summary>
        /// <para xml:lang="en">OperationTechniqueId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (OTQ|OTQ-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(OTQ|OTQ-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string OperationTechniqueId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">OperationTechniqueDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string OperationTechniqueDesignator { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">OperTechPractice</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("OTP", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("OTP", Namespace="")]
    public partial class ISOOperTechPractice
    {
        
        /// <summary>
        /// <para xml:lang="en">CulturalPracticeIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CPC|CPC-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CPC|CPC-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string CulturalPracticeIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">OperationTechniqueIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (OTQ|OTQ-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(OTQ|OTQ-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string OperationTechniqueIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">Partfield</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PFD", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PFD", Namespace="")]
    public partial class ISOPartfield
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOPolygon> _polygonnonTreatmentZoneonly;
        
        /// <summary>
        /// <para xml:lang="en">Polygon, non Treatment Zone only</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PLN")]
        public System.Collections.ObjectModel.Collection<ISOPolygon> PolygonnonTreatmentZoneonly
        {
            get
            {
                return _polygonnonTreatmentZoneonly;
            }
            private set
            {
                _polygonnonTreatmentZoneonly = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PolygonnonTreatmentZoneonly-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PolygonnonTreatmentZoneonly collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PolygonnonTreatmentZoneonlySpecified
        {
            get
            {
                return (this.PolygonnonTreatmentZoneonly.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOPartfield" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOPartfield" /> class.</para>
        /// </summary>
        public ISOPartfield()
        {
            this._polygonnonTreatmentZoneonly = new System.Collections.ObjectModel.Collection<ISOPolygon>();
            this._lineString = new System.Collections.ObjectModel.Collection<ISOLineString>();
            this._point = new System.Collections.ObjectModel.Collection<ISOPoint>();
            this._guidanceGroup = new System.Collections.ObjectModel.Collection<ISOGuidanceGroup>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOLineString> _lineString;
        
        /// <summary>
        /// <para xml:lang="en">LineString</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("LSG")]
        public System.Collections.ObjectModel.Collection<ISOLineString> LineString
        {
            get
            {
                return _lineString;
            }
            private set
            {
                _lineString = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die LineString-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the LineString collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LineStringSpecified
        {
            get
            {
                return (this.LineString.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOPoint> _point;
        
        /// <summary>
        /// <para xml:lang="en">Point</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PNT")]
        public System.Collections.ObjectModel.Collection<ISOPoint> Point
        {
            get
            {
                return _point;
            }
            private set
            {
                _point = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Point-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Point collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PointSpecified
        {
            get
            {
                return (this.Point.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOGuidanceGroup> _guidanceGroup;
        
        /// <summary>
        /// <para xml:lang="en">GuidanceGroup</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("GGP")]
        public System.Collections.ObjectModel.Collection<ISOGuidanceGroup> GuidanceGroup
        {
            get
            {
                return _guidanceGroup;
            }
            private set
            {
                _guidanceGroup = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidanceGroup-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the GuidanceGroup collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuidanceGroupSpecified
        {
            get
            {
                return (this.GuidanceGroup.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">PartfieldId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PFD|PFD-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PFD|PFD-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string PartfieldId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PartfieldCode</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string PartfieldCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PartfieldDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string PartfieldDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PartfieldArea</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public ulong PartfieldArea { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CTR|CTR-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CTR|CTR-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string CustomerIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FarmIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (FRM|FRM-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(FRM|FRM-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public string FarmIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CropTypeIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CTP|CTP-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CTP|CTP-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public string CropTypeIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CropVarietyIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CVT|CVT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CVT|CVT-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public string CropVarietyIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FieldIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PFD|PFD-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PFD|PFD-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public string FieldIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">ProcessDataVariable</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PDV", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PDV", Namespace="")]
    public partial class ISOProcessDataVariable
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOProcessDataVariable> _processDataVariable;
        
        /// <summary>
        /// <para xml:lang="en">ProcessDataVariable</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PDV")]
        public System.Collections.ObjectModel.Collection<ISOProcessDataVariable> ProcessDataVariable
        {
            get
            {
                return _processDataVariable;
            }
            private set
            {
                _processDataVariable = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProcessDataVariable-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ProcessDataVariable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessDataVariableSpecified
        {
            get
            {
                return (this.ProcessDataVariable.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOProcessDataVariable" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOProcessDataVariable" /> class.</para>
        /// </summary>
        public ISOProcessDataVariable()
        {
            this._processDataVariable = new System.Collections.ObjectModel.Collection<ISOProcessDataVariable>();
        }
        
        /// <summary>
        /// <para xml:lang="en">ProcessDataDDI</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A", DataType="hexBinary")]
        public byte[] ProcessDataDDI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProcessDataValue</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public long ProcessDataValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PDT|PDT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PDT|PDT-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string ProductIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DET|DET-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DET|DET-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string DeviceElementIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ValuePresentationIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (VPN|VPN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(VPN|VPN-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string ValuePresentationIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ActualCulturalPracticeValue</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public long ActualCulturalPracticeValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ActualCulturalPracticeValue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ActualCulturalPracticeValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ActualCulturalPracticeValueValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ActualCulturalPracticeValue</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> ActualCulturalPracticeValue
        {
            get
            {
                if (this.ActualCulturalPracticeValueValueSpecified)
                {
                    return this.ActualCulturalPracticeValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ActualCulturalPracticeValueValue = value.GetValueOrDefault();
                this.ActualCulturalPracticeValueValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">ElementTypeInstanceValue</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public long ElementTypeInstanceValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ElementTypeInstanceValue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ElementTypeInstanceValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ElementTypeInstanceValueValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ElementTypeInstanceValue</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> ElementTypeInstanceValue
        {
            get
            {
                if (this.ElementTypeInstanceValueValueSpecified)
                {
                    return this.ElementTypeInstanceValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ElementTypeInstanceValueValue = value.GetValueOrDefault();
                this.ElementTypeInstanceValueValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">Product</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PDT", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PDT", Namespace="")]
    public partial class ISOProduct
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOProductRelation> _productRelation;
        
        /// <summary>
        /// <para xml:lang="en">ProductRelation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PRN")]
        public System.Collections.ObjectModel.Collection<ISOProductRelation> ProductRelation
        {
            get
            {
                return _productRelation;
            }
            private set
            {
                _productRelation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProductRelation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ProductRelation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductRelationSpecified
        {
            get
            {
                return (this.ProductRelation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOProduct" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOProduct" /> class.</para>
        /// </summary>
        public ISOProduct()
        {
            this._productRelation = new System.Collections.ObjectModel.Collection<ISOProductRelation>();
        }
        
        /// <summary>
        /// <para xml:lang="en">ProductId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PDT|PDT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PDT|PDT-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string ProductId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string ProductDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductGroupIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PGP|PGP-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PGP|PGP-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string ProductGroupIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ValuePresentationIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (VPN|VPN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(VPN|VPN-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string ValuePresentationIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">QuantityDDI</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.Xml.Serialization.XmlAttributeAttribute("E", DataType="hexBinary")]
        public byte[] QuantityDDI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductType</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public ISOProductType ProductTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProductType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProductType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ProductTypeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductType</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ISOProductType> ProductType
        {
            get
            {
                if (this.ProductTypeValueSpecified)
                {
                    return this.ProductTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProductTypeValue = value.GetValueOrDefault();
                this.ProductTypeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">MixtureRecipeQuantity</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "0", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public long MixtureRecipeQuantityValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die MixtureRecipeQuantity-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the MixtureRecipeQuantity property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool MixtureRecipeQuantityValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">MixtureRecipeQuantity</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> MixtureRecipeQuantity
        {
            get
            {
                if (this.MixtureRecipeQuantityValueSpecified)
                {
                    return this.MixtureRecipeQuantityValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.MixtureRecipeQuantityValue = value.GetValueOrDefault();
                this.MixtureRecipeQuantityValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DensityMassPerVolume</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "0", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public long DensityMassPerVolumeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DensityMassPerVolume-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DensityMassPerVolume property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DensityMassPerVolumeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DensityMassPerVolume</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> DensityMassPerVolume
        {
            get
            {
                if (this.DensityMassPerVolumeValueSpecified)
                {
                    return this.DensityMassPerVolumeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DensityMassPerVolumeValue = value.GetValueOrDefault();
                this.DensityMassPerVolumeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DensityMassPerCount</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "0", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public long DensityMassPerCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DensityMassPerCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DensityMassPerCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DensityMassPerCountValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DensityMassPerCount</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> DensityMassPerCount
        {
            get
            {
                if (this.DensityMassPerCountValueSpecified)
                {
                    return this.DensityMassPerCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DensityMassPerCountValue = value.GetValueOrDefault();
                this.DensityMassPerCountValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DensityVolumePerCount</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "0", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("J")]
        public long DensityVolumePerCountValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DensityVolumePerCount-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DensityVolumePerCount property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DensityVolumePerCountValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DensityVolumePerCount</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> DensityVolumePerCount
        {
            get
            {
                if (this.DensityVolumePerCountValueSpecified)
                {
                    return this.DensityVolumePerCountValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DensityVolumePerCountValue = value.GetValueOrDefault();
                this.DensityVolumePerCountValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">ProductRelation</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PRN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PRN", Namespace="")]
    public partial class ISOProductRelation
    {
        
        /// <summary>
        /// <para xml:lang="en">ProductIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PDT|PDT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PDT|PDT-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string ProductIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">QuantityValue</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "0", "2147483647")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public long QuantityValue { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOProductF", Namespace="", AnonymousType=true)]
    public enum ISOProductType
    {
        
        /// <summary>
        /// <para xml:lang="en">Single</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Single,
        
        /// <summary>
        /// <para xml:lang="en">Mixture</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Mixture,
        
        /// <summary>
        /// <para xml:lang="en">TemporaryMixture</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        TemporaryMixture,
    }
    
    /// <summary>
    /// <para xml:lang="en">ProductAllocation</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PAN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PAN", Namespace="")]
    public partial class ISOProductAllocation
    {
        
        /// <summary>
        /// <para xml:lang="en">AllocationStamp</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ASP")]
        public ISOAllocationStamp AllocationStamp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PDT|PDT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PDT|PDT-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string ProductIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">QuantityDDI</para>
        /// <para xml:lang="en">Minimum length: 2.</para>
        /// <para xml:lang="en">Maximum length: 2.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(2)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(2)]
        [System.Xml.Serialization.XmlAttributeAttribute("B", DataType="hexBinary")]
        public byte[] QuantityDDI { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">QuantityValue</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "0", "2147483647")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public long QuantityValueValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die QuantityValue-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the QuantityValue property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool QuantityValueValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">QuantityValue</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<long> QuantityValue
        {
            get
            {
                if (this.QuantityValueValueSpecified)
                {
                    return this.QuantityValueValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.QuantityValueValue = value.GetValueOrDefault();
                this.QuantityValueValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">TransferMode</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public ISOTransferMode TransferModeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TransferMode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TransferMode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TransferModeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">TransferMode</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ISOTransferMode> TransferMode
        {
            get
            {
                if (this.TransferModeValueSpecified)
                {
                    return this.TransferModeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TransferModeValue = value.GetValueOrDefault();
                this.TransferModeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">DeviceElementIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (DET|DET-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(DET|DET-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string DeviceElementIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ValuePresentationIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (VPN|VPN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(VPN|VPN-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public string ValuePresentationIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductSubTypeIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PDT|PDT-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PDT|PDT-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public string ProductSubTypeIdRef { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOProductAllocationD", Namespace="", AnonymousType=true)]
    public enum ISOTransferMode
    {
        
        /// <summary>
        /// <para xml:lang="en">Filling</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Filling,
        
        /// <summary>
        /// <para xml:lang="en">Emptying</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Emptying,
        
        /// <summary>
        /// <para xml:lang="en">Remainder</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Remainder,
    }
    
    /// <summary>
    /// <para xml:lang="en">ProductGroup</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("PGP", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("PGP", Namespace="")]
    public partial class ISOProductGroup
    {
        
        /// <summary>
        /// <para xml:lang="en">ProductGroupId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PGP|PGP-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PGP|PGP-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string ProductGroupId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductGroupDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string ProductGroupDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductGroupType</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ISOProductGroupType ProductGroupTypeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProductGroupType-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the ProductGroupType property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool ProductGroupTypeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProductGroupType</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ISOProductGroupType> ProductGroupType
        {
            get
            {
                if (this.ProductGroupTypeValueSpecified)
                {
                    return this.ProductGroupTypeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.ProductGroupTypeValue = value.GetValueOrDefault();
                this.ProductGroupTypeValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOProductGroupC", Namespace="", AnonymousType=true)]
    public enum ISOProductGroupType
    {
        
        /// <summary>
        /// <para xml:lang="en">ProductGroup (default)</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        ProductGroup_default,
        
        /// <summary>
        /// <para xml:lang="en">CropType</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        CropType,
    }
    
    /// <summary>
    /// <para xml:lang="en">Task</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TSK", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TSK", Namespace="")]
    public partial class ISOTask
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOTreatmentZone> _treatmentZone;
        
        /// <summary>
        /// <para xml:lang="en">TreatmentZone</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("TZN")]
        public System.Collections.ObjectModel.Collection<ISOTreatmentZone> TreatmentZone
        {
            get
            {
                return _treatmentZone;
            }
            private set
            {
                _treatmentZone = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TreatmentZone-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TreatmentZone collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TreatmentZoneSpecified
        {
            get
            {
                return (this.TreatmentZone.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOTask" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOTask" /> class.</para>
        /// </summary>
        public ISOTask()
        {
            this._treatmentZone = new System.Collections.ObjectModel.Collection<ISOTreatmentZone>();
            this._time = new System.Collections.ObjectModel.Collection<ISOTime>();
            this._operTechPractice = new System.Collections.ObjectModel.Collection<ISOOperTechPractice>();
            this._workerAllocation = new System.Collections.ObjectModel.Collection<ISOWorkerAllocation>();
            this._deviceAllocation = new System.Collections.ObjectModel.Collection<ISODeviceAllocation>();
            this._connection = new System.Collections.ObjectModel.Collection<ISOConnection>();
            this._productAllocation = new System.Collections.ObjectModel.Collection<ISOProductAllocation>();
            this._dataLogTrigger = new System.Collections.ObjectModel.Collection<ISODataLogTrigger>();
            this._commentAllocation = new System.Collections.ObjectModel.Collection<ISOCommentAllocation>();
            this._timeLog = new System.Collections.ObjectModel.Collection<ISOTimeLog>();
            this._grid = new System.Collections.ObjectModel.Collection<ISOGrid>();
            this._controlAssignment = new System.Collections.ObjectModel.Collection<ISOControlAssignment>();
            this._guidanceAllocation = new System.Collections.ObjectModel.Collection<ISOGuidanceAllocation>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOTime> _time;
        
        /// <summary>
        /// <para xml:lang="en">Time</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("TIM")]
        public System.Collections.ObjectModel.Collection<ISOTime> Time
        {
            get
            {
                return _time;
            }
            private set
            {
                _time = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Time-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Time collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeSpecified
        {
            get
            {
                return (this.Time.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOOperTechPractice> _operTechPractice;
        
        /// <summary>
        /// <para xml:lang="en">OperTechPractice</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("OTP")]
        public System.Collections.ObjectModel.Collection<ISOOperTechPractice> OperTechPractice
        {
            get
            {
                return _operTechPractice;
            }
            private set
            {
                _operTechPractice = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OperTechPractice-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OperTechPractice collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperTechPracticeSpecified
        {
            get
            {
                return (this.OperTechPractice.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOWorkerAllocation> _workerAllocation;
        
        /// <summary>
        /// <para xml:lang="en">WorkerAllocation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("WAN")]
        public System.Collections.ObjectModel.Collection<ISOWorkerAllocation> WorkerAllocation
        {
            get
            {
                return _workerAllocation;
            }
            private set
            {
                _workerAllocation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die WorkerAllocation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the WorkerAllocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkerAllocationSpecified
        {
            get
            {
                return (this.WorkerAllocation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISODeviceAllocation> _deviceAllocation;
        
        /// <summary>
        /// <para xml:lang="en">DeviceAllocation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DAN")]
        public System.Collections.ObjectModel.Collection<ISODeviceAllocation> DeviceAllocation
        {
            get
            {
                return _deviceAllocation;
            }
            private set
            {
                _deviceAllocation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DeviceAllocation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DeviceAllocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeviceAllocationSpecified
        {
            get
            {
                return (this.DeviceAllocation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOConnection> _connection;
        
        /// <summary>
        /// <para xml:lang="en">Connection</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CNN")]
        public System.Collections.ObjectModel.Collection<ISOConnection> Connection
        {
            get
            {
                return _connection;
            }
            private set
            {
                _connection = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Connection-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Connection collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ConnectionSpecified
        {
            get
            {
                return (this.Connection.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOProductAllocation> _productAllocation;
        
        /// <summary>
        /// <para xml:lang="en">ProductAllocation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PAN")]
        public System.Collections.ObjectModel.Collection<ISOProductAllocation> ProductAllocation
        {
            get
            {
                return _productAllocation;
            }
            private set
            {
                _productAllocation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProductAllocation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ProductAllocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductAllocationSpecified
        {
            get
            {
                return (this.ProductAllocation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISODataLogTrigger> _dataLogTrigger;
        
        /// <summary>
        /// <para xml:lang="en">DataLogTrigger</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DLT")]
        public System.Collections.ObjectModel.Collection<ISODataLogTrigger> DataLogTrigger
        {
            get
            {
                return _dataLogTrigger;
            }
            private set
            {
                _dataLogTrigger = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogTrigger-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DataLogTrigger collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataLogTriggerSpecified
        {
            get
            {
                return (this.DataLogTrigger.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOCommentAllocation> _commentAllocation;
        
        /// <summary>
        /// <para xml:lang="en">CommentAllocation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CAN")]
        public System.Collections.ObjectModel.Collection<ISOCommentAllocation> CommentAllocation
        {
            get
            {
                return _commentAllocation;
            }
            private set
            {
                _commentAllocation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CommentAllocation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CommentAllocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CommentAllocationSpecified
        {
            get
            {
                return (this.CommentAllocation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOTimeLog> _timeLog;
        
        /// <summary>
        /// <para xml:lang="en">TimeLog</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("TLG")]
        public System.Collections.ObjectModel.Collection<ISOTimeLog> TimeLog
        {
            get
            {
                return _timeLog;
            }
            private set
            {
                _timeLog = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TimeLog-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TimeLog collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TimeLogSpecified
        {
            get
            {
                return (this.TimeLog.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOGrid> _grid;
        
        /// <summary>
        /// <para xml:lang="en">Grid</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("GRD")]
        public System.Collections.ObjectModel.Collection<ISOGrid> Grid
        {
            get
            {
                return _grid;
            }
            private set
            {
                _grid = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Grid-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Grid collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GridSpecified
        {
            get
            {
                return (this.Grid.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOControlAssignment> _controlAssignment;
        
        /// <summary>
        /// <para xml:lang="en">ControlAssignment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CAT")]
        public System.Collections.ObjectModel.Collection<ISOControlAssignment> ControlAssignment
        {
            get
            {
                return _controlAssignment;
            }
            private set
            {
                _controlAssignment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ControlAssignment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ControlAssignment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ControlAssignmentSpecified
        {
            get
            {
                return (this.ControlAssignment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOGuidanceAllocation> _guidanceAllocation;
        
        /// <summary>
        /// <para xml:lang="en">GuidanceAllocation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("GAN")]
        public System.Collections.ObjectModel.Collection<ISOGuidanceAllocation> GuidanceAllocation
        {
            get
            {
                return _guidanceAllocation;
            }
            private set
            {
                _guidanceAllocation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die GuidanceAllocation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the GuidanceAllocation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool GuidanceAllocationSpecified
        {
            get
            {
                return (this.GuidanceAllocation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">TaskId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (TSK|TSK-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(TSK|TSK-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string TaskId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">TaskDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string TaskDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">CustomerIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CTR|CTR-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CTR|CTR-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string CustomerIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FarmIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (FRM|FRM-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(FRM|FRM-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string FarmIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PartfieldIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (PFD|PFD-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(PFD|PFD-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string PartfieldIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ResponsibleWorkerIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (WKR|WKR-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(WKR|WKR-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public string ResponsibleWorkerIdRef { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">TaskStatus</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public ISOTaskStatus TaskStatus { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DefaultTreatmentZoneCode</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public byte DefaultTreatmentZoneCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DefaultTreatmentZoneCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the DefaultTreatmentZoneCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DefaultTreatmentZoneCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">DefaultTreatmentZoneCode</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> DefaultTreatmentZoneCode
        {
            get
            {
                if (this.DefaultTreatmentZoneCodeValueSpecified)
                {
                    return this.DefaultTreatmentZoneCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DefaultTreatmentZoneCodeValue = value.GetValueOrDefault();
                this.DefaultTreatmentZoneCodeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">PositionLostTreatmentZoneCode</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public byte PositionLostTreatmentZoneCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PositionLostTreatmentZoneCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the PositionLostTreatmentZoneCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool PositionLostTreatmentZoneCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">PositionLostTreatmentZoneCode</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> PositionLostTreatmentZoneCode
        {
            get
            {
                if (this.PositionLostTreatmentZoneCodeValueSpecified)
                {
                    return this.PositionLostTreatmentZoneCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.PositionLostTreatmentZoneCodeValue = value.GetValueOrDefault();
                this.PositionLostTreatmentZoneCodeValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">OutOfFieldTreatmentZoneCode</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("J")]
        public byte OutOfFieldTreatmentZoneCodeValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OutOfFieldTreatmentZoneCode-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the OutOfFieldTreatmentZoneCode property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool OutOfFieldTreatmentZoneCodeValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">OutOfFieldTreatmentZoneCode</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> OutOfFieldTreatmentZoneCode
        {
            get
            {
                if (this.OutOfFieldTreatmentZoneCodeValueSpecified)
                {
                    return this.OutOfFieldTreatmentZoneCodeValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.OutOfFieldTreatmentZoneCodeValue = value.GetValueOrDefault();
                this.OutOfFieldTreatmentZoneCodeValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">TreatmentZone</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TZN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TZN", Namespace="")]
    public partial class ISOTreatmentZone
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOPolygon> _polygonTreatmentZoneonly;
        
        /// <summary>
        /// <para xml:lang="en">Polygon, TreatmentZone only</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PLN")]
        public System.Collections.ObjectModel.Collection<ISOPolygon> PolygonTreatmentZoneonly
        {
            get
            {
                return _polygonTreatmentZoneonly;
            }
            private set
            {
                _polygonTreatmentZoneonly = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die PolygonTreatmentZoneonly-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the PolygonTreatmentZoneonly collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PolygonTreatmentZoneonlySpecified
        {
            get
            {
                return (this.PolygonTreatmentZoneonly.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOTreatmentZone" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOTreatmentZone" /> class.</para>
        /// </summary>
        public ISOTreatmentZone()
        {
            this._polygonTreatmentZoneonly = new System.Collections.ObjectModel.Collection<ISOPolygon>();
            this._processDataVariable = new System.Collections.ObjectModel.Collection<ISOProcessDataVariable>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOProcessDataVariable> _processDataVariable;
        
        /// <summary>
        /// <para xml:lang="en">ProcessDataVariable</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PDV")]
        public System.Collections.ObjectModel.Collection<ISOProcessDataVariable> ProcessDataVariable
        {
            get
            {
                return _processDataVariable;
            }
            private set
            {
                _processDataVariable = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProcessDataVariable-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ProcessDataVariable collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProcessDataVariableSpecified
        {
            get
            {
                return (this.ProcessDataVariable.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">TreatmentZoneCode</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public byte TreatmentZoneCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">TreatmentZoneDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string TreatmentZoneDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">TreatmentZoneColour</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public byte TreatmentZoneColourValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TreatmentZoneColour-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the TreatmentZoneColour property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool TreatmentZoneColourValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">TreatmentZoneColour</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<byte> TreatmentZoneColour
        {
            get
            {
                if (this.TreatmentZoneColourValueSpecified)
                {
                    return this.TreatmentZoneColourValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.TreatmentZoneColourValue = value.GetValueOrDefault();
                this.TreatmentZoneColourValueSpecified = value.HasValue;
            }
        }
    }
    
    /// <summary>
    /// <para xml:lang="en">Time</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TIM", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TIM", Namespace="")]
    public partial class ISOTime
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOPosition> _position;
        
        /// <summary>
        /// <para xml:lang="en">Position</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PTN")]
        public System.Collections.ObjectModel.Collection<ISOPosition> Position
        {
            get
            {
                return _position;
            }
            private set
            {
                _position = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Position-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Position collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PositionSpecified
        {
            get
            {
                return (this.Position.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOTime" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOTime" /> class.</para>
        /// </summary>
        public ISOTime()
        {
            this._position = new System.Collections.ObjectModel.Collection<ISOPosition>();
            this._dataLogValue = new System.Collections.ObjectModel.Collection<ISODataLogValue>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISODataLogValue> _dataLogValue;
        
        /// <summary>
        /// <para xml:lang="en">DataLogValue</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DLV")]
        public System.Collections.ObjectModel.Collection<ISODataLogValue> DataLogValue
        {
            get
            {
                return _dataLogValue;
            }
            private set
            {
                _dataLogValue = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die DataLogValue-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the DataLogValue collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DataLogValueSpecified
        {
            get
            {
                return (this.DataLogValue.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Start</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A", DataType="dateTime")]
        public System.DateTime Start { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Stop</para>
        /// </summary>
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("B", DataType="dateTime")]
        public System.DateTime StopValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Stop-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Stop property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool StopValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Stop</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<System.DateTime> Stop
        {
            get
            {
                if (this.StopValueSpecified)
                {
                    return this.StopValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.StopValue = value.GetValueOrDefault();
                this.StopValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Duration</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ulong DurationValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Duration-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Duration property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool DurationValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Duration</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> Duration
        {
            get
            {
                if (this.DurationValueSpecified)
                {
                    return this.DurationValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.DurationValue = value.GetValueOrDefault();
                this.DurationValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">Type</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public ISOType2 Type { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOTimeD", Namespace="", AnonymousType=true)]
    public enum ISOType2
    {
        
        /// <summary>
        /// <para xml:lang="en">Planned</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Planned,
        
        /// <summary>
        /// <para xml:lang="en">Preliminary</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Preliminary,
        
        /// <summary>
        /// <para xml:lang="en">Effective</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Effective,
        
        /// <summary>
        /// <para xml:lang="en">Ineffective</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Ineffective,
        
        /// <summary>
        /// <para xml:lang="en">Repair</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Repair,
        
        /// <summary>
        /// <para xml:lang="en">Clearing</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("7")]
        Clearing,
        
        /// <summary>
        /// <para xml:lang="en">Powered Down</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("8")]
        PoweredDown,
    }
    
    /// <summary>
    /// <para xml:lang="en">WorkerAllocation</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WAN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("WAN", Namespace="")]
    public partial class ISOWorkerAllocation
    {
        
        /// <summary>
        /// <para xml:lang="en">AllocationStamp</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("ASP")]
        public ISOAllocationStamp AllocationStamp { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (WKR|WKR-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(WKR|WKR-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string WorkerIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">TimeLog</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TLG", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TLG", Namespace="")]
    public partial class ISOTimeLog
    {
        
        /// <summary>
        /// <para xml:lang="en">Filename</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// <para xml:lang="en">Pattern: TLG[0-9][0-9][0-9][0-9][0-9].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("TLG[0-9][0-9][0-9][0-9][0-9]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string Filename { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Filelength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public ulong FilelengthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Filelength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the Filelength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FilelengthValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Filelength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> Filelength
        {
            get
            {
                if (this.FilelengthValueSpecified)
                {
                    return this.FilelengthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FilelengthValue = value.GetValueOrDefault();
                this.FilelengthValueSpecified = value.HasValue;
            }
        }
        
        /// <summary>
        /// <para xml:lang="en">TimeLogType</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ISOTimeLogType TimeLogType { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOTimeLogC", Namespace="", AnonymousType=true)]
    public enum ISOTimeLogType
    {
        
        /// <summary>
        /// <para xml:lang="en">Binary timelog file type 1</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Binarytimelogfiletype1,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOTaskG", Namespace="", AnonymousType=true)]
    public enum ISOTaskStatus
    {
        
        /// <summary>
        /// <para xml:lang="en">Planned</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Planned,
        
        /// <summary>
        /// <para xml:lang="en">Running</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Running,
        
        /// <summary>
        /// <para xml:lang="en">Paused</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Paused,
        
        /// <summary>
        /// <para xml:lang="en">Completed</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Completed,
        
        /// <summary>
        /// <para xml:lang="en">Template</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("5")]
        Template,
        
        /// <summary>
        /// <para xml:lang="en">Canceled</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("6")]
        Canceled,
    }
    
    /// <summary>
    /// <para xml:lang="en">ValuePresentation</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("VPN", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("VPN", Namespace="")]
    public partial class ISOValuePresentation
    {
        
        /// <summary>
        /// <para xml:lang="en">ValuePresentationId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (VPN|VPN-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(VPN|VPN-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string ValuePresentationId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Offset</para>
        /// <para xml:lang="en">Minimum inclusive value: -2147483648.</para>
        /// <para xml:lang="en">Maximum inclusive value: 2147483647.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(long), "-2147483648", "2147483647")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public long Offset { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Scale</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.000000001.</para>
        /// <para xml:lang="en">Maximum inclusive value: 100000000.0.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(decimal), "0.000000001", "100000000.0")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public decimal Scale { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfDecimals</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 7.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "7")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public byte NumberOfDecimals { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">UnitDesignator</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string UnitDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ColourLegendIdRef</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (CLD|CLD-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(CLD|CLD-)([0-9])+")]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public string ColourLegendIdRef { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">Worker</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("WKR", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("WKR", Namespace="")]
    public partial class ISOWorker
    {
        
        /// <summary>
        /// <para xml:lang="en">WorkerId</para>
        /// <para xml:lang="en">Minimum length: 4.</para>
        /// <para xml:lang="en">Maximum length: 14.</para>
        /// <para xml:lang="en">Pattern: (WKR|WKR-)([0-9])+.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(4)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(14)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(WKR|WKR-)([0-9])+")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string WorkerId { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerLastName</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string WorkerLastName { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerFirstName</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string WorkerFirstName { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerStreet</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public string WorkerStreet { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerPOBox</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string WorkerPOBox { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerPostalCode</para>
        /// <para xml:lang="en">Maximum length: 10.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(10)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public string WorkerPostalCode { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerCity</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public string WorkerCity { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerState</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("H")]
        public string WorkerState { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerCountry</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("I")]
        public string WorkerCountry { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerPhone</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlAttributeAttribute("J")]
        public string WorkerPhone { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerMobile</para>
        /// <para xml:lang="en">Maximum length: 20.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(20)]
        [System.Xml.Serialization.XmlAttributeAttribute("K")]
        public string WorkerMobile { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerLicenseNumber</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("L")]
        public string WorkerLicenseNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">WorkerEMail</para>
        /// <para xml:lang="en">Maximum length: 64.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(64)]
        [System.Xml.Serialization.XmlAttributeAttribute("M")]
        public string WorkerEMail { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">AttachedFile</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("AFE", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("AFE", Namespace="")]
    public partial class ISOAttachedFile
    {
        
        /// <summary>
        /// <para xml:lang="en">FilenameWithExtension</para>
        /// <para xml:lang="en">Minimum length: 12.</para>
        /// <para xml:lang="en">Maximum length: 12.</para>
        /// <para xml:lang="en">Pattern: ([0-9]|[A-Z]){8}.([0-9]|[A-Z]){3}.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(12)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(12)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("([0-9]|[A-Z]){8}.([0-9]|[A-Z]){3}")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string FilenameWithExtension { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Preserve</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public ISOPreserve Preserve { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ManufacturerGLN</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public string ManufacturerGLN { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FileType</para>
        /// <para xml:lang="en">Minimum inclusive value: 1.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "1", "254")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public byte FileType { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FileVersion</para>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public string FileVersion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FileLength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(ulong), "0", "4294967294")]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public ulong FileLengthValue { get; set; }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die FileLength-Eigenschaft spezifiziert ist, oder legt diesen fest.</para>
        /// <para xml:lang="en">Gets or sets a value indicating whether the FileLength property is specified.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
        public bool FileLengthValueSpecified { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">FileLength</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 4294967294.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public System.Nullable<ulong> FileLength
        {
            get
            {
                if (this.FileLengthValueSpecified)
                {
                    return this.FileLengthValue;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                this.FileLengthValue = value.GetValueOrDefault();
                this.FileLengthValueSpecified = value.HasValue;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOAttachedFileB", Namespace="", AnonymousType=true)]
    public enum ISOPreserve
    {
        
        /// <summary>
        /// <para xml:lang="en">Task Controller does not need to preserve attached file</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        TaskControllerdoesnotneedtopreserveattachedfile,
        
        /// <summary>
        /// <para xml:lang="en">Preserve on Task Controller and send back to FMIS</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        PreserveonTaskControllerandsendbacktoFMIS,
    }
    
    /// <summary>
    /// <para xml:lang="en">ISO 11783 Task Data File</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISO11783_TaskData", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("ISO11783_TaskData", Namespace="")]
    public partial class ISO11783TaskDataFile
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOAttachedFile> _attachedFile;
        
        /// <summary>
        /// <para xml:lang="en">AttachedFile</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("AFE")]
        public System.Collections.ObjectModel.Collection<ISOAttachedFile> AttachedFile
        {
            get
            {
                return _attachedFile;
            }
            private set
            {
                _attachedFile = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die AttachedFile-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the AttachedFile collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool AttachedFileSpecified
        {
            get
            {
                return (this.AttachedFile.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISO11783TaskDataFile" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISO11783TaskDataFile" /> class.</para>
        /// </summary>
        public ISO11783TaskDataFile()
        {
            this._attachedFile = new System.Collections.ObjectModel.Collection<ISOAttachedFile>();
            this._baseStation = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOBaseStation>();
            this._codedComment = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedComment>();
            this._codedCommentGroup = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedCommentGroup>();
            this._colourLegend = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOColourLegend>();
            this._cropType = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCropType>();
            this._culturalPractice = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCulturalPractice>();
            this._customer = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCustomer>();
            this._device = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISODevice>();
            this._farm = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOFarm>();
            this._operationTechnique = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOOperationTechnique>();
            this._partfield = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOPartfield>();
            this._product = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProduct>();
            this._productGroup = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProductGroup>();
            this._task = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOTask>();
            this._taskControllerCapabilities = new System.Collections.ObjectModel.Collection<ISOTaskControllerCapabilities>();
            this._valuePresentation = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOValuePresentation>();
            this._worker = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOWorker>();
            this._externalFileReference = new System.Collections.ObjectModel.Collection<ISOExternalFileReference>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOBaseStation> _baseStation;
        
        /// <summary>
        /// <para xml:lang="en">BaseStation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("BSN")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOBaseStation> BaseStation
        {
            get
            {
                return _baseStation;
            }
            private set
            {
                _baseStation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BaseStation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the BaseStation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BaseStationSpecified
        {
            get
            {
                return (this.BaseStation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedComment> _codedComment;
        
        /// <summary>
        /// <para xml:lang="en">CodedComment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CCT")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedComment> CodedComment
        {
            get
            {
                return _codedComment;
            }
            private set
            {
                _codedComment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CodedComment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CodedComment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodedCommentSpecified
        {
            get
            {
                return (this.CodedComment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedCommentGroup> _codedCommentGroup;
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentGroup</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CCG")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedCommentGroup> CodedCommentGroup
        {
            get
            {
                return _codedCommentGroup;
            }
            private set
            {
                _codedCommentGroup = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CodedCommentGroup-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CodedCommentGroup collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodedCommentGroupSpecified
        {
            get
            {
                return (this.CodedCommentGroup.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOColourLegend> _colourLegend;
        
        /// <summary>
        /// <para xml:lang="en">ColourLegend</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CLD")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOColourLegend> ColourLegend
        {
            get
            {
                return _colourLegend;
            }
            private set
            {
                _colourLegend = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ColourLegend-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ColourLegend collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColourLegendSpecified
        {
            get
            {
                return (this.ColourLegend.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCropType> _cropType;
        
        /// <summary>
        /// <para xml:lang="en">CropType</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CTP")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCropType> CropType
        {
            get
            {
                return _cropType;
            }
            private set
            {
                _cropType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CropType-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CropType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CropTypeSpecified
        {
            get
            {
                return (this.CropType.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCulturalPractice> _culturalPractice;
        
        /// <summary>
        /// <para xml:lang="en">CulturalPractice</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CPC")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCulturalPractice> CulturalPractice
        {
            get
            {
                return _culturalPractice;
            }
            private set
            {
                _culturalPractice = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CulturalPractice-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CulturalPractice collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CulturalPracticeSpecified
        {
            get
            {
                return (this.CulturalPractice.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCustomer> _customer;
        
        /// <summary>
        /// <para xml:lang="en">Customer</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CTR")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCustomer> Customer
        {
            get
            {
                return _customer;
            }
            private set
            {
                _customer = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Customer-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Customer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerSpecified
        {
            get
            {
                return (this.Customer.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISODevice> _device;
        
        /// <summary>
        /// <para xml:lang="en">Device</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DVC")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISODevice> Device
        {
            get
            {
                return _device;
            }
            private set
            {
                _device = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Device-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Device collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeviceSpecified
        {
            get
            {
                return (this.Device.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOFarm> _farm;
        
        /// <summary>
        /// <para xml:lang="en">Farm</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("FRM")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOFarm> Farm
        {
            get
            {
                return _farm;
            }
            private set
            {
                _farm = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Farm-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Farm collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FarmSpecified
        {
            get
            {
                return (this.Farm.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOOperationTechnique> _operationTechnique;
        
        /// <summary>
        /// <para xml:lang="en">OperationTechnique</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("OTQ")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOOperationTechnique> OperationTechnique
        {
            get
            {
                return _operationTechnique;
            }
            private set
            {
                _operationTechnique = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OperationTechnique-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OperationTechnique collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationTechniqueSpecified
        {
            get
            {
                return (this.OperationTechnique.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOPartfield> _partfield;
        
        /// <summary>
        /// <para xml:lang="en">Partfield</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PFD")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOPartfield> Partfield
        {
            get
            {
                return _partfield;
            }
            private set
            {
                _partfield = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Partfield-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Partfield collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartfieldSpecified
        {
            get
            {
                return (this.Partfield.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProduct> _product;
        
        /// <summary>
        /// <para xml:lang="en">Product</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PDT")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProduct> Product
        {
            get
            {
                return _product;
            }
            private set
            {
                _product = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Product-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Product collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductSpecified
        {
            get
            {
                return (this.Product.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProductGroup> _productGroup;
        
        /// <summary>
        /// <para xml:lang="en">ProductGroup</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PGP")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProductGroup> ProductGroup
        {
            get
            {
                return _productGroup;
            }
            private set
            {
                _productGroup = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProductGroup-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ProductGroup collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductGroupSpecified
        {
            get
            {
                return (this.ProductGroup.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOTask> _task;
        
        /// <summary>
        /// <para xml:lang="en">Task</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("TSK")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOTask> Task
        {
            get
            {
                return _task;
            }
            private set
            {
                _task = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Task-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Task collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskSpecified
        {
            get
            {
                return (this.Task.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOTaskControllerCapabilities> _taskControllerCapabilities;
        
        /// <summary>
        /// <para xml:lang="en">TaskControllerCapabilities</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("TCC")]
        public System.Collections.ObjectModel.Collection<ISOTaskControllerCapabilities> TaskControllerCapabilities
        {
            get
            {
                return _taskControllerCapabilities;
            }
            private set
            {
                _taskControllerCapabilities = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die TaskControllerCapabilities-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the TaskControllerCapabilities collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskControllerCapabilitiesSpecified
        {
            get
            {
                return (this.TaskControllerCapabilities.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOValuePresentation> _valuePresentation;
        
        /// <summary>
        /// <para xml:lang="en">ValuePresentation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("VPN")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOValuePresentation> ValuePresentation
        {
            get
            {
                return _valuePresentation;
            }
            private set
            {
                _valuePresentation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ValuePresentation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ValuePresentation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValuePresentationSpecified
        {
            get
            {
                return (this.ValuePresentation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOWorker> _worker;
        
        /// <summary>
        /// <para xml:lang="en">Worker</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("WKR")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOWorker> Worker
        {
            get
            {
                return _worker;
            }
            private set
            {
                _worker = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Worker-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Worker collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkerSpecified
        {
            get
            {
                return (this.Worker.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<ISOExternalFileReference> _externalFileReference;
        
        /// <summary>
        /// <para xml:lang="en">ExternalFileReference</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("XFR")]
        public System.Collections.ObjectModel.Collection<ISOExternalFileReference> ExternalFileReference
        {
            get
            {
                return _externalFileReference;
            }
            private set
            {
                _externalFileReference = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ExternalFileReference-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ExternalFileReference collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ExternalFileReferenceSpecified
        {
            get
            {
                return (this.ExternalFileReference.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private ISO11783TaskDataFileVersionMajor _versionMajor = Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISO11783TaskDataFileVersionMajor.Version4;
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("VersionMajor")]
        public ISO11783TaskDataFileVersionMajor VersionMajor
        {
            get
            {
                return _versionMajor;
            }
            set
            {
                _versionMajor = value;
            }
        }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("VersionMinor")]
        public ISO11783TaskDataFileVersionMinor VersionMinor { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("ManagementSoftwareManufacturer")]
        public string ManagementSoftwareManufacturer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("ManagementSoftwareVersion")]
        public string ManagementSoftwareVersion { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("TaskControllerManufacturer")]
        public string TaskControllerManufacturer { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("TaskControllerVersion")]
        public string TaskControllerVersion { get; set; }
        
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("DataTransferOrigin")]
        public ISO11783TaskDataFileDataTransferOrigin DataTransferOrigin { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Maximum length: 32.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(32)]
        [System.Xml.Serialization.XmlAttributeAttribute("lang")]
        public string lang { get; set; }
    }
    
    /// <summary>
    /// <para xml:lang="en">TaskControllerCapabilities</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("TCC", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("TCC", Namespace="")]
    public partial class ISOTaskControllerCapabilities
    {
        
        /// <summary>
        /// <para xml:lang="en">TaskControllerControlFunctionNAME</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A", DataType="hexBinary")]
        public byte[] TaskControllerControlFunctionNAME { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">TaskControllerDesignator</para>
        /// <para xml:lang="en">Maximum length: 153.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(153)]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public string TaskControllerDesignator { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">VersionNumber</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("C")]
        public ISOVersionNumber VersionNumber { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">ProvidedCapabilities</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 63.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "63")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("D")]
        public byte ProvidedCapabilities { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfBoomsSectionControl</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("E")]
        public byte NumberOfBoomsSectionControl { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfSectionsSectionControl</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("F")]
        public byte NumberOfSectionsSectionControl { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">NumberOfControlChannels</para>
        /// <para xml:lang="en">Minimum inclusive value: 0.</para>
        /// <para xml:lang="en">Maximum inclusive value: 254.</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RangeAttribute(typeof(byte), "0", "254")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("G")]
        public byte NumberOfControlChannels { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOTaskControllerCapabilitiesC", Namespace="", AnonymousType=true)]
    public enum ISOVersionNumber
    {
        
        /// <summary>
        /// <para xml:lang="en">Version 0</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Version0,
        
        /// <summary>
        /// <para xml:lang="en">Version 1</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Version1,
        
        /// <summary>
        /// <para xml:lang="en">Version 2</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Version2,
        
        /// <summary>
        /// <para xml:lang="en">Version 3</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Version3,
        
        /// <summary>
        /// <para xml:lang="en">Version 4</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Version4,
    }
    
    /// <summary>
    /// <para xml:lang="en">ExternalFileReference</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("XFR", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("XFR", Namespace="")]
    public partial class ISOExternalFileReference
    {
        
        /// <summary>
        /// <para xml:lang="en">Filename</para>
        /// <para xml:lang="en">Minimum length: 8.</para>
        /// <para xml:lang="en">Maximum length: 8.</para>
        /// <para xml:lang="en">Pattern: (AFE|BSN|CCG|CCT|CLD|CPC|CTP|CTR|DVC|FRM|OTQ|PDT|PFD|PGP|TSK|VPN|WKR)[0-9][0-9][0-9][0-9][0-9].</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.MinLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.MaxLengthAttribute(8)]
        [System.ComponentModel.DataAnnotations.RegularExpressionAttribute("(AFE|BSN|CCG|CCT|CLD|CPC|CTP|CTR|DVC|FRM|OTQ|PDT|PFD|PGP|TSK|VPN|WKR)[0-9][0-9][0" +
            "-9][0-9][0-9]")]
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("A")]
        public string Filename { get; set; }
        
        /// <summary>
        /// <para xml:lang="en">Filetype</para>
        /// </summary>
        [System.ComponentModel.DataAnnotations.RequiredAttribute(AllowEmptyStrings=true)]
        [System.Xml.Serialization.XmlAttributeAttribute("B")]
        public ISOFiletype Filetype { get; set; }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISOExternalFileReferenceB", Namespace="", AnonymousType=true)]
    public enum ISOFiletype
    {
        
        /// <summary>
        /// <para xml:lang="en">XML</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        XML,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISO11783TaskDataFileVersionMajor", Namespace="", AnonymousType=true)]
    public enum ISO11783TaskDataFileVersionMajor
    {
        
        /// <summary>
        /// <para xml:lang="en">Version 4</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("4")]
        Version4,
        
        /// <summary>
        /// <para xml:lang="en">Version 2</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Version2,
        
        /// <summary>
        /// <para xml:lang="en">Version 3</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Version3,
    }
    
    /// <summary>
    /// <para xml:lang="en">All minor versions up to 3 of the XML schema for this major version</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISO11783TaskDataFileVersionMinor", Namespace="", AnonymousType=true)]
    public enum ISO11783TaskDataFileVersionMinor
    {
        
        [System.Xml.Serialization.XmlEnumAttribute("0")]
        Item0,
        
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        Item1,
        
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        Item2,
        
        [System.Xml.Serialization.XmlEnumAttribute("3")]
        Item3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("ISO11783TaskDataFileDataTransferOrigin", Namespace="", AnonymousType=true)]
    public enum ISO11783TaskDataFileDataTransferOrigin
    {
        
        /// <summary>
        /// <para xml:lang="en">FMIS</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("1")]
        FMIS,
        
        /// <summary>
        /// <para xml:lang="en">MICS</para>
        /// </summary>
        [System.Xml.Serialization.XmlEnumAttribute("2")]
        MICS,
    }
    
    /// <summary>
    /// <para xml:lang="en">ExternalFileContents</para>
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XmlSchemaClassGenerator", "2.1.1174.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute("XFC", Namespace="", AnonymousType=true)]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlRootAttribute("XFC", Namespace="")]
    public partial class ISOExternalFileContents
    {
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOBaseStation> _baseStation;
        
        /// <summary>
        /// <para xml:lang="en">BaseStation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("BSN")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOBaseStation> BaseStation
        {
            get
            {
                return _baseStation;
            }
            private set
            {
                _baseStation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die BaseStation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the BaseStation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool BaseStationSpecified
        {
            get
            {
                return (this.BaseStation.Count != 0);
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Initialisiert eine neue Instanz der <see cref="ISOExternalFileContents" /> Klasse.</para>
        /// <para xml:lang="en">Initializes a new instance of the <see cref="ISOExternalFileContents" /> class.</para>
        /// </summary>
        public ISOExternalFileContents()
        {
            this._baseStation = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOBaseStation>();
            this._codedComment = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedComment>();
            this._codedCommentGroup = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedCommentGroup>();
            this._colourLegend = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOColourLegend>();
            this._cropType = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCropType>();
            this._culturalPractice = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCulturalPractice>();
            this._customer = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCustomer>();
            this._device = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISODevice>();
            this._farm = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOFarm>();
            this._operationTechnique = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOOperationTechnique>();
            this._partfield = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOPartfield>();
            this._product = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProduct>();
            this._productGroup = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProductGroup>();
            this._task = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOTask>();
            this._valuePresentation = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOValuePresentation>();
            this._worker = new System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOWorker>();
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedComment> _codedComment;
        
        /// <summary>
        /// <para xml:lang="en">CodedComment</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CCT")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedComment> CodedComment
        {
            get
            {
                return _codedComment;
            }
            private set
            {
                _codedComment = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CodedComment-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CodedComment collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodedCommentSpecified
        {
            get
            {
                return (this.CodedComment.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedCommentGroup> _codedCommentGroup;
        
        /// <summary>
        /// <para xml:lang="en">CodedCommentGroup</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CCG")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCodedCommentGroup> CodedCommentGroup
        {
            get
            {
                return _codedCommentGroup;
            }
            private set
            {
                _codedCommentGroup = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CodedCommentGroup-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CodedCommentGroup collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CodedCommentGroupSpecified
        {
            get
            {
                return (this.CodedCommentGroup.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOColourLegend> _colourLegend;
        
        /// <summary>
        /// <para xml:lang="en">ColourLegend</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CLD")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOColourLegend> ColourLegend
        {
            get
            {
                return _colourLegend;
            }
            private set
            {
                _colourLegend = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ColourLegend-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ColourLegend collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ColourLegendSpecified
        {
            get
            {
                return (this.ColourLegend.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCropType> _cropType;
        
        /// <summary>
        /// <para xml:lang="en">CropType</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CTP")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCropType> CropType
        {
            get
            {
                return _cropType;
            }
            private set
            {
                _cropType = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CropType-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CropType collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CropTypeSpecified
        {
            get
            {
                return (this.CropType.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCulturalPractice> _culturalPractice;
        
        /// <summary>
        /// <para xml:lang="en">CulturalPractice</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CPC")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCulturalPractice> CulturalPractice
        {
            get
            {
                return _culturalPractice;
            }
            private set
            {
                _culturalPractice = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die CulturalPractice-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the CulturalPractice collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CulturalPracticeSpecified
        {
            get
            {
                return (this.CulturalPractice.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCustomer> _customer;
        
        /// <summary>
        /// <para xml:lang="en">Customer</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("CTR")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOCustomer> Customer
        {
            get
            {
                return _customer;
            }
            private set
            {
                _customer = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Customer-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Customer collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CustomerSpecified
        {
            get
            {
                return (this.Customer.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISODevice> _device;
        
        /// <summary>
        /// <para xml:lang="en">Device</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("DVC")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISODevice> Device
        {
            get
            {
                return _device;
            }
            private set
            {
                _device = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Device-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Device collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DeviceSpecified
        {
            get
            {
                return (this.Device.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOFarm> _farm;
        
        /// <summary>
        /// <para xml:lang="en">Farm</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("FRM")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOFarm> Farm
        {
            get
            {
                return _farm;
            }
            private set
            {
                _farm = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Farm-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Farm collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool FarmSpecified
        {
            get
            {
                return (this.Farm.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOOperationTechnique> _operationTechnique;
        
        /// <summary>
        /// <para xml:lang="en">OperationTechnique</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("OTQ")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOOperationTechnique> OperationTechnique
        {
            get
            {
                return _operationTechnique;
            }
            private set
            {
                _operationTechnique = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die OperationTechnique-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the OperationTechnique collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationTechniqueSpecified
        {
            get
            {
                return (this.OperationTechnique.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOPartfield> _partfield;
        
        /// <summary>
        /// <para xml:lang="en">Partfield</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PFD")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOPartfield> Partfield
        {
            get
            {
                return _partfield;
            }
            private set
            {
                _partfield = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Partfield-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Partfield collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartfieldSpecified
        {
            get
            {
                return (this.Partfield.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProduct> _product;
        
        /// <summary>
        /// <para xml:lang="en">Product</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PDT")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProduct> Product
        {
            get
            {
                return _product;
            }
            private set
            {
                _product = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Product-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Product collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductSpecified
        {
            get
            {
                return (this.Product.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProductGroup> _productGroup;
        
        /// <summary>
        /// <para xml:lang="en">ProductGroup</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("PGP")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOProductGroup> ProductGroup
        {
            get
            {
                return _productGroup;
            }
            private set
            {
                _productGroup = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ProductGroup-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ProductGroup collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ProductGroupSpecified
        {
            get
            {
                return (this.ProductGroup.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOTask> _task;
        
        /// <summary>
        /// <para xml:lang="en">Task</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("TSK")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOTask> Task
        {
            get
            {
                return _task;
            }
            private set
            {
                _task = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Task-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Task collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TaskSpecified
        {
            get
            {
                return (this.Task.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOValuePresentation> _valuePresentation;
        
        /// <summary>
        /// <para xml:lang="en">ValuePresentation</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("VPN")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOValuePresentation> ValuePresentation
        {
            get
            {
                return _valuePresentation;
            }
            private set
            {
                _valuePresentation = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die ValuePresentation-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the ValuePresentation collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ValuePresentationSpecified
        {
            get
            {
                return (this.ValuePresentation.Count != 0);
            }
        }
        
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        private System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOWorker> _worker;
        
        /// <summary>
        /// <para xml:lang="en">Worker</para>
        /// </summary>
        [System.Xml.Serialization.XmlElementAttribute("WKR")]
        public System.Collections.ObjectModel.Collection<Dev4Agriculture.ISO11783.ISOXML.TaskFile.ISOWorker> Worker
        {
            get
            {
                return _worker;
            }
            private set
            {
                _worker = value;
            }
        }
        
        /// <summary>
        /// <para xml:lang="de">Ruft einen Wert ab, der angibt, ob die Worker-Collection leer ist.</para>
        /// <para xml:lang="en">Gets a value indicating whether the Worker collection is empty.</para>
        /// </summary>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WorkerSpecified
        {
            get
            {
                return (this.Worker.Count != 0);
            }
        }
    }
}
